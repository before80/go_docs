<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>syscall on Go 中文档集</title><link>https://before80.github.io/go_docs/stdLib/syscall/</link><description>Recent content in syscall on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 17 May 2023 11:11:20 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/stdLib/syscall/index.xml" rel="self" type="application/rss+xml"/><item><title>js</title><link>https://before80.github.io/go_docs/stdLib/syscall/js/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/syscall/js/</guid><description>原文：https://pkg.go.dev/syscall/js@go1.24.2 Package js gives access to the WebAssembly host environment when using the js/wasm architecture. Its API is based on JavaScript semantics. ​ js 包在使用 js/wasm 架</description></item><item><title>syscall</title><link>https://before80.github.io/go_docs/stdLib/syscall/syscall/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/syscall/syscall/</guid><description>原文：https://pkg.go.dev/syscall@go1.24.2 Package syscall contains an interface to the low-level operating system primitives. The details vary depending on the underlying system, and by default, godoc will display the syscall documentation for the current system.</description></item></channel></rss>