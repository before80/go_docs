<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>encoding on Go 中文档集</title><link>https://before80.github.io/go_docs/stdLib/encoding/</link><description>Recent content in encoding on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 17 May 2023 11:11:20 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/stdLib/encoding/index.xml" rel="self" type="application/rss+xml"/><item><title>ascii85</title><link>https://before80.github.io/go_docs/stdLib/encoding/ascii85/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/ascii85/</guid><description>原文：https://pkg.go.dev/encoding/ascii85@go1.24.2 Package ascii85 implements the ascii85 data encoding as used in the btoa tool and Adobe&amp;rsquo;s PostScript and PDF document formats. ​ ascii85 包</description></item><item><title>asn1</title><link>https://before80.github.io/go_docs/stdLib/encoding/asn1/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/asn1/</guid><description>原文：https://pkg.go.dev/encoding/asn1@go1.24.2 Package asn1 implements parsing of DER-encoded ASN.1 data structures, as defined in ITU-T Rec X.690. ​ Package asn1 实现对 DER 编码的 ASN.1</description></item><item><title>base32</title><link>https://before80.github.io/go_docs/stdLib/encoding/base32/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/base32/</guid><description>原文：https://pkg.go.dev/encoding/base32@go1.24.2 Package base32 implements base32 encoding as specified by RFC 4648. ​ base32 包实现了 RFC 4648 中指定的 base32 编</description></item><item><title>base64</title><link>https://before80.github.io/go_docs/stdLib/encoding/base64/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/base64/</guid><description>原文：https://pkg.go.dev/encoding/base64@go1.24.2 Package base64 implements base64 encoding as specified by RFC 4648. ​ base64包实现了RFC</description></item><item><title>binary</title><link>https://before80.github.io/go_docs/stdLib/encoding/binary/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/binary/</guid><description>原文：https://pkg.go.dev/encoding/binary@go1.24.2 Package binary implements simple translation between numbers and byte sequences and encoding and decoding of varints. ​ binary 包实现了数字</description></item><item><title>csv</title><link>https://before80.github.io/go_docs/stdLib/encoding/csv/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/csv/</guid><description>原文：https://pkg.go.dev/encoding/csv@go1.24.2 Package csv reads and writes comma-separated values (CSV) files. There are many kinds of CSV files; this package supports the format described in RFC 4180. ​ c</description></item><item><title>encoding</title><link>https://before80.github.io/go_docs/stdLib/encoding/encoding/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/encoding/</guid><description>原文：https://pkg.go.dev/encoding@go1.24.2 Package encoding defines interfaces shared by other packages that convert data to and from byte-level and textual representations. Packages that check for these interfaces include encoding/gob, encoding/json, and encoding/xml. As a</description></item><item><title>gob</title><link>https://before80.github.io/go_docs/stdLib/encoding/gob/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/gob/</guid><description>原文：https://pkg.go.dev/encoding/gob@go1.24.2 Package gob manages streams of gobs - binary values exchanged between an Encoder (transmitter) and a Decoder (receiver). A typical use is transporting arguments and results of</description></item><item><title>hex</title><link>https://before80.github.io/go_docs/stdLib/encoding/hex/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/hex/</guid><description>原文：https://pkg.go.dev/encoding/hex@go1.24.2 Package hex implements hexadecimal encoding and decoding. ​ hex包实现了十六进制的编码和解码。 常</description></item><item><title>json</title><link>https://before80.github.io/go_docs/stdLib/encoding/json/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/json/</guid><description>原文：https://pkg.go.dev/encoding/json@go1.24.2 Package json implements encoding and decoding of JSON as defined in RFC 7159. The mapping between JSON and Go values is described in the documentation for</description></item><item><title>pem</title><link>https://before80.github.io/go_docs/stdLib/encoding/pem/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/pem/</guid><description>原文：https://pkg.go.dev/encoding/pem@go1.24.2 Package pem implements the PEM data encoding, which originated in Privacy Enhanced Mail. The most common use of PEM encoding today is in TLS keys and certificates.</description></item><item><title>xml</title><link>https://before80.github.io/go_docs/stdLib/encoding/xml/</link><pubDate>Wed, 17 May 2023 11:11:20 +0800</pubDate><guid>https://before80.github.io/go_docs/stdLib/encoding/xml/</guid><description>原文：https://pkg.go.dev/encoding/xml@go1.24.2 Package xml implements a simple XML 1.0 parser that understands XML name spaces. ​ xml包实现了一个简单的X</description></item></channel></rss>