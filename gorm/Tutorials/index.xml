<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>教程 on Go 中文档集</title><link>https://before80.github.io/go_docs/gorm/Tutorials/</link><description>Recent content in 教程 on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 28 Oct 2023 14:29:21 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/gorm/Tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Context</title><link>https://before80.github.io/go_docs/gorm/Tutorials/context/</link><pubDate>Sat, 28 Oct 2023 14:29:31 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/context/</guid><description>原文：https://gorm.io/docs/context.html GORM provides Context support, you can use it with method WithContext ​ GORM提供了Context支持，你可以使用</description></item><item><title>错误处理</title><link>https://before80.github.io/go_docs/gorm/Tutorials/errorHanding/</link><pubDate>Sat, 28 Oct 2023 14:29:47 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/errorHanding/</guid><description>原文：https://gorm.io/docs/error_handling.html In Go, error handling is important. ​ 在Go语言中，错误处理非常重要。 You are encouraged to</description></item><item><title>方法链</title><link>https://before80.github.io/go_docs/gorm/Tutorials/methodChaining/</link><pubDate>Sat, 28 Oct 2023 14:30:07 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/methodChaining/</guid><description>原文：https://gorm.io/docs/method_chaining.html GORM allows method chaining, so you can write code like this: ​ GORM允许方法链，因此你可</description></item><item><title>Session</title><link>https://before80.github.io/go_docs/gorm/Tutorials/session/</link><pubDate>Sat, 28 Oct 2023 14:30:17 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/session/</guid><description>原文：https://gorm.io/docs/session.html GORM provides Session method, which is a New Session Method, it allows to create a new session mode with configuration: ​ GORM提供了一个Sess</description></item><item><title>钩子</title><link>https://before80.github.io/go_docs/gorm/Tutorials/hooks/</link><pubDate>Sat, 28 Oct 2023 14:30:28 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/hooks/</guid><description>对象生命周期 Object Life Cycle Hooks are functions that are called before or after creation/querying/updating/deletion. ​ Hooks是在创建/查询/更新/删除之前或之后调用的函数。 If you have defined specified methods for a model, it will be called automatically when creating, updating, querying, deleting, and if</description></item><item><title>事务</title><link>https://before80.github.io/go_docs/gorm/Tutorials/transactions/</link><pubDate>Sat, 28 Oct 2023 14:30:45 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/transactions/</guid><description>原文：https://gorm.io/docs/transactions.html 禁用默认事务 Disable Default Transaction GORM perform write (create/update/delete) operations run inside a transaction to ensure data consistency, you can disable it during initialization if</description></item><item><title>迁移</title><link>https://before80.github.io/go_docs/gorm/Tutorials/migration/</link><pubDate>Sat, 28 Oct 2023 14:30:56 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/migration/</guid><description>原文：https://gorm.io/docs/migration.html 自动迁移 Auto Migration Automatically migrate your schema, to keep your schema up to date. ​ 自动迁移您的模式，以保持模式</description></item><item><title>通用数据库接口 sql.DB</title><link>https://before80.github.io/go_docs/gorm/Tutorials/genericDatabaseInterface/</link><pubDate>Sat, 28 Oct 2023 14:31:29 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/genericDatabaseInterface/</guid><description>原文：https://gorm.io/docs/generic_interface.html GORM provides the method DB which returns a generic database interface *sql.DB from the current *gorm.DB ​ GORM提供了</description></item><item><title>日志记录器</title><link>https://before80.github.io/go_docs/gorm/Tutorials/logger/</link><pubDate>Sat, 28 Oct 2023 14:31:06 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/logger/</guid><description>原文：https://gorm.io/docs/logger.html Gorm has a default logger implementation, it will print Slow SQL and happening errors by default ​ Gorm有一个默认的日志记录器实现，</description></item><item><title>性能</title><link>https://before80.github.io/go_docs/gorm/Tutorials/performance/</link><pubDate>Sat, 28 Oct 2023 14:31:43 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/performance/</guid><description>原文：https://gorm.io/docs/performance.html GORM optimizes many things to improve the performance, the default performance should be good for most applications, but there are still some tips for how to improve it for your</description></item><item><title>自定义数据类型</title><link>https://before80.github.io/go_docs/gorm/Tutorials/customizeDataTypes/</link><pubDate>Sat, 28 Oct 2023 14:32:12 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/customizeDataTypes/</guid><description>原文：https://gorm.io/docs/data_types.html GORM provides few interfaces that allow users to define well-supported customized data types for GORM, takes json as an example ​ GORM提供了一些接</description></item><item><title>范围 Scopes</title><link>https://before80.github.io/go_docs/gorm/Tutorials/scopes/</link><pubDate>Sat, 28 Oct 2023 14:32:25 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/scopes/</guid><description>原文：https://gorm.io/docs/scopes.html Scopes allow you to re-use commonly used logic, the shared logic needs to be defined as type func(*gorm.DB) *gorm.DB ​ 范围允许你重用常用逻辑，共享逻</description></item><item><title>约定 Conventions</title><link>https://before80.github.io/go_docs/gorm/Tutorials/conventions/</link><pubDate>Sat, 28 Oct 2023 14:32:37 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/conventions/</guid><description>原文：https://gorm.io/docs/conventions.html ID 作为主键 ID as Primary Key GORM uses the field with the name ID as the table’s primary key by default.</description></item><item><title>设置</title><link>https://before80.github.io/go_docs/gorm/Tutorials/settings/</link><pubDate>Sat, 28 Oct 2023 14:32:46 +0800</pubDate><guid>https://before80.github.io/go_docs/gorm/Tutorials/settings/</guid><description>原文：https://gorm.io/docs/settings.html GORM provides Set, Get, InstanceSet, InstanceGet methods allow users pass values to hooks or other methods ​ GORM提供了Set、Get、I</description></item></channel></rss>