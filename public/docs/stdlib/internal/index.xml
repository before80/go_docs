<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go文档集 – internal</title>
    <link>http://ngd.cn/docs/stdLib/internal/</link>
    <description>Recent content in internal on go文档集</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 May 2023 11:11:20 +0800</lastBuildDate>
    
	  <atom:link href="http://ngd.cn/docs/stdLib/internal/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/abi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/abi/</guid>
      <description>
        
        
        &lt;h1 id=&#34;abi&#34;&gt;abi&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/abi@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalabigo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi_amd64.go;l=7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const (

	// RAX, RBX, RCX, RDI, RSI, R8, R9, R10, R11.
	IntArgRegs = 9

	// X0 -&amp;gt; X14.
	FloatArgRegs = 15

	// We use SSE2 registers which support 64-bit float operations.
	EffectiveFloatRegSize = 8
)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-funcpcabi0httpscsopensourcegooglegogogo1201srcinternalabiabigol117-httpspkggodevinternalabigo1201funcpcabi0&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=117&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FuncPCABI0&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#FuncPCABI0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func FuncPCABI0(f any) uintptr
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FuncPCABI0 returns the entry PC of the function f, which must be a direct reference of a function defined as ABI0. Otherwise it is a compile-time error.&lt;/p&gt;
&lt;p&gt;Implemented as a compile intrinsic.&lt;/p&gt;
&lt;h4 id=&#34;func-funcpcabiinternalhttpscsopensourcegooglegogogo1201srcinternalabiabigol126-httpspkggodevinternalabigo1201funcpcabiinternal&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=126&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FuncPCABIInternal&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#FuncPCABIInternal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func FuncPCABIInternal(f any) uintptr
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FuncPCABIInternal returns the entry PC of the function f. If f is a direct reference of a function, it must be defined as ABIInternal. Otherwise it is a compile-time error. If f is not a direct reference of a defined function, it assumes that f is a func value. Otherwise the behavior is undefined.&lt;/p&gt;
&lt;p&gt;Implemented as a compile intrinsic.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-intargregbitmaphttpscsopensourcegooglegogogo1201srcinternalabiabigol87-httpspkggodevinternalabigo1201intargregbitmap&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=87&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IntArgRegBitmap&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#IntArgRegBitmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type IntArgRegBitmap [(IntArgRegs + 7) / 8]uint8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IntArgRegBitmap is a bitmap large enough to hold one bit per integer argument/return register.&lt;/p&gt;
&lt;h4 id=&#34;intargregbitmap-gethttpscsopensourcegooglegogogo1201srcinternalabiabigol100-httpspkggodevinternalabigo1201intargregbitmapget&#34;&gt;(*IntArgRegBitmap) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=100&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Get&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#IntArgRegBitmap.Get&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (b *IntArgRegBitmap) Get(i int) bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Get returns whether the i&amp;rsquo;th bit of the bitmap is set.&lt;/p&gt;
&lt;p&gt;nosplit because it&amp;rsquo;s called in extremely sensitive contexts, like on the reflectcall return path.&lt;/p&gt;
&lt;h4 id=&#34;intargregbitmap-sethttpscsopensourcegooglegogogo1201srcinternalabiabigol90-httpspkggodevinternalabigo1201intargregbitmapset&#34;&gt;(*IntArgRegBitmap) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=90&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Set&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#IntArgRegBitmap.Set&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (b *IntArgRegBitmap) Set(i int)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Set sets the i&amp;rsquo;th bit of the bitmap to 1.&lt;/p&gt;
&lt;h3 id=&#34;type-regargshttpscsopensourcegooglegogogo1201srcinternalabiabigol21-httpspkggodevinternalabigo1201regargs&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RegArgs&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#RegArgs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type RegArgs struct {
	// Values in these slots should be precisely the bit-by-bit
	// representation of how they would appear in a register.
	//
	// This means that on big endian arches, integer values should
	// be in the top bits of the slot. Floats are usually just
	// directly represented, but some architectures treat narrow
	// width floating point values specially (e.g. they&amp;#39;re promoted
	// first, or they need to be NaN-boxed).
	Ints   [IntArgRegs]uintptr  // untyped integer registers
	Floats [FloatArgRegs]uint64 // untyped float registers

	// Ptrs is a space that duplicates Ints but with pointer type,
	// used to make pointers passed or returned  in registers
	// visible to the GC by making the type unsafe.Pointer.
	Ptrs [IntArgRegs]unsafe.Pointer

	// ReturnIsPtr is a bitmap that indicates which registers
	// contain or will contain pointers on the return path from
	// a reflectcall. The i&amp;#39;th bit indicates whether the i&amp;#39;th
	// register contains or will contain a valid Go pointer.
	ReturnIsPtr IntArgRegBitmap
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;RegArgs is a struct that has space for each argument and return value register on the current architecture.&lt;/p&gt;
&lt;p&gt;Assembly code knows the layout of the first two fields of RegArgs.&lt;/p&gt;
&lt;p&gt;RegArgs also contains additional space to hold pointers when it may not be safe to keep them only in the integer register space otherwise.&lt;/p&gt;
&lt;h4 id=&#34;regargs-dumphttpscsopensourcegooglegogogo1201srcinternalabiabigol47-httpspkggodevinternalabigo1201regargsdumpadded-in-go1176&#34;&gt;(*RegArgs) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=47&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dump&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#RegArgs.Dump&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.17.6&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *RegArgs) Dump()
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;regargs-intregargaddrhttpscsopensourcegooglegogogo1201srcinternalabiabigol74-httpspkggodevinternalabigo1201regargsintregargaddradded-in-go118&#34;&gt;(*RegArgs) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/abi/abi.go;l=74&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IntRegArgAddr&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/abi@go1.20.1#RegArgs.IntRegArgAddr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *RegArgs) IntRegArgAddr(reg int, argSize uintptr) unsafe.Pointer
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IntRegArgAddr returns a pointer inside of r.Ints[reg] that is appropriately offset for an argument of size argSize.&lt;/p&gt;
&lt;p&gt;argSize must be non-zero, fit in a register, and a power-of-two.&lt;/p&gt;
&lt;p&gt;This method is a helper for dealing with the endianness of different CPU architectures, since sub-word-sized arguments in big endian architectures need to be &amp;ldquo;aligned&amp;rdquo; to the upper edge of the register to be interpreted by the CPU correctly.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/buildcfg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/buildcfg/</guid>
      <description>
        
        
        &lt;h1 id=&#34;buildcfg&#34;&gt;buildcfg&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/buildcfg@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package buildcfg provides access to the build configuration described by the current environment. It is for use by build tools such as cmd/go or cmd/compile and for setting up go/build&amp;rsquo;s Default context.&lt;/p&gt;
&lt;p&gt;Note that it does NOT provide access to the build configuration used to build the currently-running binary. For that, use runtime.GOOS etc as well as internal/goexperiment.&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalbuildcfggo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const DefaultGOEXPERIMENT = defaultGOEXPERIMENT
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DefaultGOEXPERIMENT is the embedded default GOEXPERIMENT string. It is not guaranteed to be canonical.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/cfg.go;l=22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var (
	GOROOT   = runtime.GOROOT() // cached for efficiency
	GOARCH   = envOr(&amp;#34;GOARCH&amp;#34;, defaultGOARCH)
	GOOS     = envOr(&amp;#34;GOOS&amp;#34;, defaultGOOS)
	GO386    = envOr(&amp;#34;GO386&amp;#34;, defaultGO386)
	GOAMD64  = goamd64()
	GOARM    = goarm()
	GOMIPS   = gomips()
	GOMIPS64 = gomips64()
	GOPPC64  = goppc64()
	GOWASM   = gowasm()
	ToolTags = toolTags()
	GO_LDSO  = defaultGO_LDSO
	Version  = version
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/cfg.go;l=39&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var Error error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Error is one of the errors found (if any) in the build configuration.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var FramePointerEnabled = GOARCH == &amp;#34;amd64&amp;#34; || GOARCH == &amp;#34;arm64&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FramePointerEnabled enables the use of platform conventions for saving frame pointers.&lt;/p&gt;
&lt;p&gt;This used to be an experiment, but now it&amp;rsquo;s always enabled on platforms that support it.&lt;/p&gt;
&lt;p&gt;Note: must agree with runtime.framepointer_enabled.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-checkhttpscsopensourcegooglegogogo1201srcinternalbuildcfgcfggol42-httpspkggodevinternalbuildcfggo1201check&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/cfg.go;l=42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#Check&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Check()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Check exits the program with a fatal error if Error is non-nil.&lt;/p&gt;
&lt;h4 id=&#34;func-gogoarchhttpscsopensourcegooglegogogo1201srcinternalbuildcfgcfggol177-httpspkggodevinternalbuildcfggo1201gogoarchadded-in-go120&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/cfg.go;l=177&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GOGOARCH&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#GOGOARCH&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.20&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func GOGOARCH() (name, value string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GOGOARCH returns the name and value of the GO$GOARCH setting. For example, if GOARCH is &amp;ldquo;amd64&amp;rdquo; it might return &amp;ldquo;GOAMD64&amp;rdquo;, &amp;ldquo;v2&amp;rdquo;.&lt;/p&gt;
&lt;h4 id=&#34;func-getgoextlinkenabledhttpscsopensourcegooglegogogo1201srcinternalbuildcfgcfggol152-httpspkggodevinternalbuildcfggo1201getgoextlinkenabled&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/cfg.go;l=152&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Getgoextlinkenabled&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#Getgoextlinkenabled&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Getgoextlinkenabled() string
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-experimentflagshttpscsopensourcegooglegogogo1201srcinternalbuildcfgexpgol17-httpspkggodevinternalbuildcfggo1201experimentflagsadded-in-go119&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=17&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ExperimentFlags&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#ExperimentFlags&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.19&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type ExperimentFlags struct {
	goexperiment.Flags
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ExperimentFlags represents a set of GOEXPERIMENT flags relative to a baseline (platform-default) experiment configuration.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var Experiment ExperimentFlags = func() ExperimentFlags {
	flags, err := ParseGOEXPERIMENT(GOOS, GOARCH, envOr(&amp;#34;GOEXPERIMENT&amp;#34;, defaultGOEXPERIMENT))
	if err != nil {
		Error = err
		return ExperimentFlags{}
	}
	return *flags
}()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Experiment contains the toolchain experiments enabled for the current build.&lt;/p&gt;
&lt;p&gt;(This is not necessarily the set of experiments the compiler itself was built with.)&lt;/p&gt;
&lt;p&gt;experimentBaseline specifies the experiment flags that are enabled by default in the current toolchain. This is, in effect, the &amp;ldquo;control&amp;rdquo; configuration and any variation from this is an experiment.&lt;/p&gt;
&lt;h4 id=&#34;func-parsegoexperimenthttpscsopensourcegooglegogogo1201srcinternalbuildcfgexpgol58-httpspkggodevinternalbuildcfggo1201parsegoexperiment&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ParseGOEXPERIMENT&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#ParseGOEXPERIMENT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func ParseGOEXPERIMENT(goos, goarch, goexp string) (*ExperimentFlags, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ParseGOEXPERIMENT parses a (GOOS, GOARCH, GOEXPERIMENT) configuration tuple and returns the enabled and baseline experiment flag sets.&lt;/p&gt;
&lt;p&gt;TODO(mdempsky): Move to internal/goexperiment.&lt;/p&gt;
&lt;h4 id=&#34;experimentflags-allhttpscsopensourcegooglegogogo1201srcinternalbuildcfgexpgol189-httpspkggodevinternalbuildcfggo1201experimentflagsalladded-in-go119&#34;&gt;(*ExperimentFlags) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=189&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;All&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#ExperimentFlags.All&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.19&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (exp *ExperimentFlags) All() []string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All returns a list of all experiment settings. Disabled experiments appear in the list prefixed by &amp;ldquo;no&amp;rdquo;.&lt;/p&gt;
&lt;h4 id=&#34;experimentflags-enabledhttpscsopensourcegooglegogogo1201srcinternalbuildcfgexpgol183-httpspkggodevinternalbuildcfggo1201experimentflagsenabledadded-in-go119&#34;&gt;(*ExperimentFlags) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=183&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Enabled&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#ExperimentFlags.Enabled&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.19&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (exp *ExperimentFlags) Enabled() []string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enabled returns a list of enabled experiments, as lower-cased experiment names.&lt;/p&gt;
&lt;h4 id=&#34;experimentflags-stringhttpscsopensourcegooglegogogo1201srcinternalbuildcfgexpgol147-httpspkggodevinternalbuildcfggo1201experimentflagsstringadded-in-go119&#34;&gt;(*ExperimentFlags) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/buildcfg/exp.go;l=147&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;String&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/buildcfg@go1.20.1#ExperimentFlags.String&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.19&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (exp *ExperimentFlags) String() string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;String returns the canonical GOEXPERIMENT string to enable this experiment configuration. (Experiments in the same state as in the baseline are elided.)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/bytealg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/bytealg/</guid>
      <description>
        
        
        &lt;h1 id=&#34;bytealg&#34;&gt;bytealg&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/bytealg@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalbytealggo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/index_amd64.go;l=9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const MaxBruteForce = 64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const PrimeRK = 16777619
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PrimeRK is the prime base used in Rabin-Karp algorithm.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var MaxLen int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MaxLen is the maximum length of the string to be searched for (argument b) in Index. If MaxLen is not 0, make sure MaxLen &amp;gt;= 4.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-comparehttpscsopensourcegooglegogogo1201srcinternalbytealgcompare_nativegol12-httpspkggodevinternalbytealggo1201compare&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/compare_native.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Compare&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#Compare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Compare(a, b []byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-counthttpscsopensourcegooglegogogo1201srcinternalbytealgcount_nativegol10-httpspkggodevinternalbytealggo1201count&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/count_native.go;l=10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Count&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#Count&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Count(b []byte, c byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-countstringhttpscsopensourcegooglegogogo1201srcinternalbytealgcount_nativegol13-httpspkggodevinternalbytealggo1201countstring&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/count_native.go;l=13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CountString&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#CountString&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func CountString(s string, c byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-cutoverhttpscsopensourcegooglegogogo1201srcinternalbytealgindex_amd64gol23-httpspkggodevinternalbytealggo1201cutover&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/index_amd64.go;l=23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cutover&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#Cutover&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Cutover(n int) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cutover reports the number of failures of IndexByte we should tolerate before switching over to Index. n is the number of bytes processed so far. See the bytes.Index implementation for details.&lt;/p&gt;
&lt;h4 id=&#34;func-equalhttpscsopensourcegooglegogogo1201srcinternalbytealgequal_genericgol14-httpspkggodevinternalbytealggo1201equal&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/equal_generic.go;l=14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Equal&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#Equal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Equal(a, b []byte) bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Equal reports whether a and b are the same length and contain the same bytes. A nil argument is equivalent to an empty slice.&lt;/p&gt;
&lt;p&gt;Equal is equivalent to bytes.Equal. It is provided here for convenience, because some packages cannot depend on bytes.&lt;/p&gt;
&lt;h4 id=&#34;func-hashstrhttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol53-httpspkggodevinternalbytealggo1201hashstradded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=53&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashStr&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#HashStr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HashStr(sep string) (uint32, uint32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HashStr returns the hash and the appropriate multiplicative factor for use in Rabin-Karp algorithm.&lt;/p&gt;
&lt;h4 id=&#34;func-hashstrbyteshttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol36-httpspkggodevinternalbytealggo1201hashstrbytesadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=36&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashStrBytes&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#HashStrBytes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HashStrBytes(sep []byte) (uint32, uint32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HashStrBytes returns the hash and the appropriate multiplicative factor for use in Rabin-Karp algorithm.&lt;/p&gt;
&lt;h4 id=&#34;func-hashstrrevhttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol87-httpspkggodevinternalbytealggo1201hashstrrevadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=87&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashStrRev&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#HashStrRev&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HashStrRev(sep string) (uint32, uint32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HashStrRev returns the hash of the reverse of sep and the appropriate multiplicative factor for use in Rabin-Karp algorithm.&lt;/p&gt;
&lt;h4 id=&#34;func-hashstrrevbyteshttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol70-httpspkggodevinternalbytealggo1201hashstrrevbytesadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=70&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashStrRevBytes&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#HashStrRevBytes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HashStrRevBytes(sep []byte) (uint32, uint32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HashStrRevBytes returns the hash of the reverse of sep and the appropriate multiplicative factor for use in Rabin-Karp algorithm.&lt;/p&gt;
&lt;h4 id=&#34;func-indexhttpscsopensourcegooglegogogo1201srcinternalbytealgindex_nativegol13-httpspkggodevinternalbytealggo1201index&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/index_native.go;l=13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Index&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#Index&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Index(a, b []byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Index returns the index of the first instance of b in a, or -1 if b is not present in a. Requires 2 &amp;lt;= len(b) &amp;lt;= MaxLen.&lt;/p&gt;
&lt;h4 id=&#34;func-indexbytehttpscsopensourcegooglegogogo1201srcinternalbytealgindexbyte_nativegol10-httpspkggodevinternalbytealggo1201indexbyte&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/indexbyte_native.go;l=10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IndexByte&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#IndexByte&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IndexByte(b []byte, c byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-indexbytestringhttpscsopensourcegooglegogogo1201srcinternalbytealgindexbyte_nativegol13-httpspkggodevinternalbytealggo1201indexbytestring&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/indexbyte_native.go;l=13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IndexByteString&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#IndexByteString&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IndexByteString(s string, c byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-indexrabinkarphttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol129-httpspkggodevinternalbytealggo1201indexrabinkarpadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=129&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IndexRabinKarp&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#IndexRabinKarp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IndexRabinKarp(s, substr string) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IndexRabinKarp uses the Rabin-Karp search algorithm to return the index of the first occurrence of substr in s, or -1 if not present.&lt;/p&gt;
&lt;h4 id=&#34;func-indexrabinkarpbyteshttpscsopensourcegooglegogogo1201srcinternalbytealgbytealggol104-httpspkggodevinternalbytealggo1201indexrabinkarpbytesadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/bytealg.go;l=104&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IndexRabinKarpBytes&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#IndexRabinKarpBytes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IndexRabinKarpBytes(s, sep []byte) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IndexRabinKarpBytes uses the Rabin-Karp search algorithm to return the index of the first occurrence of substr in s, or -1 if not present.&lt;/p&gt;
&lt;h4 id=&#34;func-indexstringhttpscsopensourcegooglegogogo1201srcinternalbytealgindex_nativegol19-httpspkggodevinternalbytealggo1201indexstring&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/bytealg/index_native.go;l=19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IndexString&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/bytealg@go1.20.1#IndexString&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IndexString(a, b string) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IndexString returns the index of the first instance of b in a, or -1 if b is not present in a. Requires 2 &amp;lt;= len(b) &amp;lt;= MaxLen.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/cfg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/cfg/</guid>
      <description>
        
        
        &lt;h1 id=&#34;cfg&#34;&gt;cfg&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/cfg@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/cfg@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package cfg holds configuration shared by the Go command and internal/testenv. Definitions that don&amp;rsquo;t need to be exposed outside of cmd/go should be in cmd/go/internal/cfg instead of this package.&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcfggo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/cfg@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/cfg/cfg.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const KnownEnv = `` /* 639-byte string literal not displayed */
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;KnownEnv is a list of environment variables that affect the operation of the Go command.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage/</guid>
      <description>
        
        
        &lt;h1 id=&#34;coverage&#34;&gt;coverage&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragego1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=325&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const CounterFilePref = &amp;#34;covcounters&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterFilePref is the file prefix used when emitting coverage data output files. CounterFileTemplate describes the format of the file name: prefix followed by meta-file hash followed by process ID followed by emit UnixNanoTime.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=327&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const CounterFileRegexp = `^%s\.(\S+)\.(\d+)\.(\d+)+$`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=326&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const CounterFileTempl = &amp;#34;%s.%x.%d.%d&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=277&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const CounterFileVersion = 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterFileVersion stores the most recent counter data file version.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=96&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const CovMetaHeaderSize = 16 + 4 + 4 + 4 + 4 + 4 + 4 + 4 // keep in sync with above
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=374&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const FirstCtrOffset = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=373&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const FuncIdOffset = 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=62&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const MetaFilePref = &amp;#34;covmeta&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MetaFilePref is a prefix used when emitting meta-data files; these files are of the form &amp;ldquo;covmeta.&lt;hash&gt;&amp;rdquo;, where hash is a hash computed from the hashes of all the package meta-data symbols in the program.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=65&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const MetaFileVersion = 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MetaFileVersion contains the current (most recent) meta-data file version.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/pkid.go;l=68&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const NotHardCoded = -1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NotHardCoded is a package pseudo-ID indicating that a given package is not part of the runtime and doesn&amp;rsquo;t require a hard-coded ID.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=371&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const NumCtrsOffset = 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=372&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const PkgIdOffset = 1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=274&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var CovCounterMagic = [4]byte{&amp;#39;\x00&amp;#39;, &amp;#39;\x63&amp;#39;, &amp;#39;\x77&amp;#39;, &amp;#39;\x6d&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CovCounterMagic holds the magic string for a coverage counter-data file.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=56&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var CovMetaMagic = [4]byte{&amp;#39;\x00&amp;#39;, &amp;#39;\x63&amp;#39;, &amp;#39;\x76&amp;#39;, &amp;#39;\x6d&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CovMetaMagic holds the magic string for a meta-data file.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-hardcodedpkgidhttpscsopensourcegooglegogogo1201srcinternalcoveragepkidgol73-httpspkggodevinternalcoveragego1201hardcodedpkgid&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/pkid.go;l=73&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HardCodedPkgID&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#HardCodedPkgID&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HardCodedPkgID(pkgpath string) int
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HardCodedPkgID returns the hard-coded ID for the specified package path, or -1 if we don&amp;rsquo;t use a hard-coded ID. Hard-coded IDs start at -2 and decrease as we go down the list.&lt;/p&gt;
&lt;h4 id=&#34;func-round4httpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol343-httpspkggodevinternalcoveragego1201round4&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=343&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Round4&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#Round4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Round4(x int) int
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-counterfilefooterhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol314-httpspkggodevinternalcoveragego1201counterfilefooter&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=314&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterFileFooter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterFileFooter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterFileFooter struct {
	Magic [4]byte

	NumSegments uint32
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterFileFooter appears at the tail end of a counter data file, and stores the number of segments it contains.&lt;/p&gt;
&lt;h3 id=&#34;type-counterfileheaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol280-httpspkggodevinternalcoveragego1201counterfileheader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=280&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterFileHeader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterFileHeader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterFileHeader struct {
	Magic     [4]byte
	Version   uint32
	MetaHash  [16]byte
	CFlavor   CounterFlavor
	BigEndian bool
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterFileHeader stores files header information for a counter-data file.&lt;/p&gt;
&lt;h3 id=&#34;type-counterflavorhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol331-httpspkggodevinternalcoveragego1201counterflavor&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=331&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterFlavor&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterFlavor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterFlavor uint8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterFlavor describes how function and counters are stored/represented in the counter section of the file.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const (
	// &amp;#34;Raw&amp;#34; representation: all values (pkg ID, func ID, num counters,
	// and counters themselves) are stored as uint32&amp;#39;s.
	CtrRaw CounterFlavor = iota + 1

	// &amp;#34;ULeb&amp;#34; representation: all values (pkg ID, func ID, num counters,
	// and counters themselves) are stored with ULEB128 encoding.
	CtrULeb128
)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;type-countergranularityhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol246-httpspkggodevinternalcoveragego1201countergranularity&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=246&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterGranularity&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterGranularity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterGranularity uint8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterGranularity tracks the granularity of the coverage counters being used in a given coverage-instrumented program.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const (
	CtrGranularityInvalid CounterGranularity = iota
	CtrGranularityPerBlock
	CtrGranularityPerFunc
)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;countergranularity-stringhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol254-httpspkggodevinternalcoveragego1201countergranularitystring&#34;&gt;(CounterGranularity) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=254&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;String&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterGranularity.String&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm CounterGranularity) String() string
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;type-countermodehttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol198-httpspkggodevinternalcoveragego1201countermode&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=198&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterMode&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterMode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterMode uint8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterMode tracks the &amp;ldquo;flavor&amp;rdquo; of the coverage counters being used in a given coverage-instrumented program.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const (
	CtrModeInvalid  CounterMode = iota
	CtrModeSet                  // &amp;#34;set&amp;#34; mode
	CtrModeCount                // &amp;#34;count&amp;#34; mode
	CtrModeAtomic               // &amp;#34;atomic&amp;#34; mode
	CtrModeRegOnly              // registration-only pseudo-mode
	CtrModeTestMain             // testmain pseudo-mode
)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-parsecountermodehttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol225-httpspkggodevinternalcoveragego1201parsecountermode&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=225&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ParseCounterMode&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#ParseCounterMode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func ParseCounterMode(mode string) CounterMode
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;countermode-stringhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol209-httpspkggodevinternalcoveragego1201countermodestring&#34;&gt;(CounterMode) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=209&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;String&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterMode.String&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm CounterMode) String() string
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;type-countersegmentheaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol306-httpspkggodevinternalcoveragego1201countersegmentheader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=306&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterSegmentHeader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CounterSegmentHeader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterSegmentHeader struct {
	FcnEntries uint64
	StrTabLen  uint32
	ArgsLen    uint32
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterSegmentHeader encapsulates information about a specific segment in a counter data file, which at the moment contains counters data from a single execution of a coverage-instrumented program. Following the segment header will be the string table and args table, and then (possibly) padding bytes to bring the byte size of the preamble up to a multiple of 4. Immediately following that will be the counter payloads.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;args&amp;rdquo; section of a segment is used to store annotations describing where the counter data came from; this section is basically a series of key-value pairs (can be thought of as an encoded &amp;lsquo;map[string]string&amp;rsquo;). At the moment we only write os.Args() data to this section, using pairs of the form &amp;ldquo;argc=&lt;integer&gt;&amp;rdquo;, &amp;ldquo;argv0=&amp;lt;os.Args[0]&amp;gt;&amp;rdquo;, &amp;ldquo;argv1=&amp;lt;os.Args[1]&amp;gt;&amp;rdquo;, and so on. In the future the args table may also include things like GOOS/GOARCH values, and/or tags indicating which tests were run to generate the counter data.&lt;/p&gt;
&lt;h3 id=&#34;type-coverfixupconfighttpscsopensourcegooglegogogo1201srcinternalcoveragecmddefsgol43-httpspkggodevinternalcoveragego1201coverfixupconfig&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmddefs.go;l=43&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverFixupConfig&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CoverFixupConfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverFixupConfig struct {
	// Name of the variable (created by cmd/cover) containing the
	// encoded meta-data for the package.
	MetaVar string

	// Length of the meta-data.
	MetaLen int

	// Hash computed by cmd/cover of the meta-data.
	MetaHash string

	// Instrumentation strategy. For now this is always set to
	// &amp;#34;normal&amp;#34;, but in the future we may add new values (for example,
	// if panic paths are instrumented, or if the instrumenter
	// eliminates redundant counters).
	Strategy string

	// Prefix assigned to the names of counter variables generated
	// during instrumentation by cmd/cover.
	CounterPrefix string

	// Name chosen for the package ID variable generated during
	// instrumentation.
	PkgIdVar string

	// Counter mode (e.g. set/count/atomic)
	CounterMode string

	// Counter granularity (perblock or perfunc).
	CounterGranularity string
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CoverFixupConfig contains annotations/notes generated by the cmd/cover tool (during instrumentation) to be passed on to the compiler when the instrumented code is compiled. The cmd/cover tool creates a struct of this type, JSON-encodes it, and emits the result to a file, which the Go command then passes to the compiler when the instrumented package is built.&lt;/p&gt;
&lt;h3 id=&#34;type-coverpkgconfighttpscsopensourcegooglegogogo1201srcinternalcoveragecmddefsgol12-httpspkggodevinternalcoveragego1201coverpkgconfig&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmddefs.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverPkgConfig&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CoverPkgConfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverPkgConfig struct {
	// File into which cmd/cover should emit summary info
	// when instrumentation is complete.
	OutConfig string

	// Import path for the package being instrumented.
	PkgPath string

	// Package name.
	PkgName string

	// Instrumentation granularity: one of &amp;#34;perfunc&amp;#34; or &amp;#34;perblock&amp;#34; (default)
	Granularity string

	// Module path for this package (empty if no go.mod in use)
	ModulePath string

	// Local mode indicates we&amp;#39;re doing a coverage build or test of a
	// package selected via local import path, e.g. &amp;#34;./...&amp;#34; or
	// &amp;#34;./foo/bar&amp;#34; as opposed to a non-relative import path. See the
	// corresponding field in cmd/go&amp;#39;s PackageInternal struct for more
	// info.
	Local bool
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CoverPkgConfig is a bundle of information passed from the Go command to the cover command during &amp;ldquo;go build -cover&amp;rdquo; runs. The Go command creates and fills in a struct as below, then passes file containing the encoded JSON for the struct to the &amp;ldquo;cover&amp;rdquo; tool when instrumenting the source files in a Go package.&lt;/p&gt;
&lt;h3 id=&#34;type-coverableunithttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol189-httpspkggodevinternalcoveragego1201coverableunit&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=189&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverableUnit&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#CoverableUnit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverableUnit struct {
	StLine, StCol uint32
	EnLine, EnCol uint32
	NxStmts       uint32
	Parent        uint32
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CoverableUnit describes the source characteristics of a single program unit for which we want to gather coverage info. Coverable units are either &amp;ldquo;simple&amp;rdquo; or &amp;ldquo;intraline&amp;rdquo;; a &amp;ldquo;simple&amp;rdquo; coverable unit corresponds to a basic block (region of straight-line code with no jumps or control transfers). An &amp;ldquo;intraline&amp;rdquo; unit corresponds to a logical clause nested within some other simple unit. A simple unit will have a zero Parent value; for an intraline unit NxStmts will be zero and and Parent will be set to 1 plus the index of the containing simple statement. Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;L7:   q := 1
L8:   x := (y == 101 || launch() == false)
L9:   r := x * 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For the code above we would have three simple units (one for each line), then an intraline unit describing the &amp;ldquo;launch() == false&amp;rdquo; clause in line 8, with Parent pointing to the index of the line 8 unit in the units array.&lt;/p&gt;
&lt;p&gt;Note: in the initial version of the coverage revamp, only simple units will be in use.&lt;/p&gt;
&lt;h3 id=&#34;type-funcdeschttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol161-httpspkggodevinternalcoveragego1201funcdesc&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=161&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FuncDesc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#FuncDesc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type FuncDesc struct {
	Funcname string
	Srcfile  string
	Units    []CoverableUnit
	Lit      bool // true if this is a function literal
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FuncDesc encapsulates the meta-data definitions for a single Go function. This version assumes that we&amp;rsquo;re looking at a function before inlining; if we want to capture a post-inlining view of the world, the representations of source positions would need to be a good deal more complicated.&lt;/p&gt;
&lt;h3 id=&#34;type-metafileheaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol68-httpspkggodevinternalcoveragego1201metafileheader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=68&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MetaFileHeader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#MetaFileHeader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type MetaFileHeader struct {
	Magic        [4]byte
	Version      uint32
	TotalLength  uint64
	Entries      uint64
	MetaFileHash [16]byte
	StrTabOffset uint32
	StrTabLength uint32
	CMode        CounterMode
	CGranularity CounterGranularity
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MetaFileHeader stores file header information for a meta-data file.&lt;/p&gt;
&lt;h3 id=&#34;type-metasymbolheaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedefsgol84-httpspkggodevinternalcoveragego1201metasymbolheader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/defs.go;l=84&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MetaSymbolHeader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage@go1.20.1#MetaSymbolHeader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type MetaSymbolHeader struct {
	Length     uint32 // size of meta-symbol payload in bytes
	PkgName    uint32 // string table index
	PkgPath    uint32 // string table index
	ModulePath uint32 // string table index
	MetaHash   [16]byte

	NumFiles uint32
	NumFuncs uint32
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MetaSymbolHeader stores header information for a single meta-data blob, e.g. the coverage meta-data payload computed for a given Go package.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_calloc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_calloc/</guid>
      <description>
        
        
        &lt;h1 id=&#34;calloc&#34;&gt;calloc&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/calloc@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/calloc@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragecallocgo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/calloc@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-batchcounterallochttpscsopensourcegooglegogogo1201srcinternalcoveragecallocbatchcounterallocgol13-httpspkggodevinternalcoveragecallocgo1201batchcounteralloc&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/calloc/batchcounteralloc.go;l=13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BatchCounterAlloc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/calloc@go1.20.1#BatchCounterAlloc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type BatchCounterAlloc struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;batchcounteralloc-allocatecountershttpscsopensourcegooglegogogo1201srcinternalcoveragecallocbatchcounterallocgol17-httpspkggodevinternalcoveragecallocgo1201batchcounterallocallocatecounters&#34;&gt;(*BatchCounterAlloc) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/calloc/batchcounteralloc.go;l=17&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AllocateCounters&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/calloc@go1.20.1#BatchCounterAlloc.AllocateCounters&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (ca *BatchCounterAlloc) AllocateCounters(n int) []uint32
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_cformat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_cformat/</guid>
      <description>
        
        
        &lt;h1 id=&#34;cformat&#34;&gt;cformat&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/cformat@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragecformatgo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-formatterhttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol42-httpspkggodevinternalcoveragecformatgo1201formatter&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Formatter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Formatter struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newformatterhttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol80-httpspkggodevinternalcoveragecformatgo1201newformatter&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewFormatter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#NewFormatter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewFormatter(cm coverage.CounterMode) *Formatter
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;formatter-addunithttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol109-httpspkggodevinternalcoveragecformatgo1201formatteraddunit&#34;&gt;(*Formatter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=109&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AddUnit&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter.AddUnit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fm *Formatter) AddUnit(file string, fname string, isfnlit bool, unit coverage.CoverableUnit, count uint32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AddUnit passes info on a single coverable unit (file, funcname, literal flag, range of lines, and counter value) to the formatter. Counter values will be accumulated where appropriate.&lt;/p&gt;
&lt;h4 id=&#34;formatter-emitfuncshttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol250-httpspkggodevinternalcoveragecformatgo1201formatteremitfuncs&#34;&gt;(*Formatter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=250&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EmitFuncs&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter.EmitFuncs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fm *Formatter) EmitFuncs(w io.Writer) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EmitFuncs writes out a function-level summary to the writer &amp;lsquo;w&amp;rsquo;. A note on handling function literals: although we collect coverage data for unnamed literals, it probably does not make sense to include them in the function summary since there isn&amp;rsquo;t any good way to name them (this is also consistent with the legacy cmd/cover implementation). We do want to include their counts in the overall summary however.&lt;/p&gt;
&lt;h4 id=&#34;formatter-emitpercenthttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol203-httpspkggodevinternalcoveragecformatgo1201formatteremitpercent&#34;&gt;(*Formatter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=203&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EmitPercent&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter.EmitPercent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fm *Formatter) EmitPercent(w io.Writer, covpkgs string, noteEmpty bool) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EmitPercent writes out a &amp;ldquo;percentage covered&amp;rdquo; string to the writer &amp;lsquo;w&amp;rsquo;.&lt;/p&gt;
&lt;h4 id=&#34;formatter-emittextualhttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol170-httpspkggodevinternalcoveragecformatgo1201formatteremittextual&#34;&gt;(*Formatter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=170&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EmitTextual&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter.EmitTextual&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fm *Formatter) EmitTextual(w io.Writer) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EmitTextual writes the accumulated coverage data in the legacy cmd/cover text format to the writer &amp;lsquo;w&amp;rsquo;. We sort the data items by importpath, source file, and line number before emitting (this sorting is not explicitly mandated by the format, but seems like a good idea for repeatable/deterministic dumps).&lt;/p&gt;
&lt;h4 id=&#34;formatter-setpackagehttpscsopensourcegooglegogogo1201srcinternalcoveragecformatformatgol91-httpspkggodevinternalcoveragecformatgo1201formattersetpackage&#34;&gt;(*Formatter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cformat/format.go;l=91&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetPackage&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cformat@go1.20.1#Formatter.SetPackage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fm *Formatter) SetPackage(importpath string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetPackage tells the formatter that we&amp;rsquo;re about to visit the coverage data for the package with the specified import path. Note that it&amp;rsquo;s OK to call SetPackage more than once with the same import path; counter data values will be accumulated.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_cmerge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_cmerge/</guid>
      <description>
        
        
        &lt;h1 id=&#34;cmerge&#34;&gt;cmerge&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragecmergego1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-saturatingaddhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol61-httpspkggodevinternalcoveragecmergego1201saturatingadd&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=61&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SaturatingAdd&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#SaturatingAdd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func SaturatingAdd(dst, src uint32) (uint32, bool)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Saturating add does a saturing addition of &amp;lsquo;dst&amp;rsquo; and &amp;lsquo;src&amp;rsquo;, returning added value or math.MaxUint32 plus an overflow flag.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-mergerhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol20-httpspkggodevinternalcoveragecmergego1201merger&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Merger&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Merger struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Merger provides state and methods to help manage the process of merging together coverage counter data for a given function, for tools that need to implicitly merge counter as they read multiple coverage counter data files.&lt;/p&gt;
&lt;h4 id=&#34;merger-granularityhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol102-httpspkggodevinternalcoveragecmergego1201mergergranularity&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=102&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Granularity&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.Granularity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm *Merger) Granularity() coverage.CounterGranularity
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;merger-mergecountershttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol28-httpspkggodevinternalcoveragecmergego1201mergermergecounters&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=28&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MergeCounters&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.MergeCounters&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (m *Merger) MergeCounters(dst, src []uint32) (error, bool)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MergeCounters takes the counter values in &amp;lsquo;src&amp;rsquo; and merges them into &amp;lsquo;dst&amp;rsquo; according to the correct counter mode.&lt;/p&gt;
&lt;h4 id=&#34;merger-modehttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol98-httpspkggodevinternalcoveragecmergego1201mergermode&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=98&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mode&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.Mode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm *Merger) Mode() coverage.CounterMode
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;merger-resetmodeandgranularityhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol92-httpspkggodevinternalcoveragecmergego1201mergerresetmodeandgranularity&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=92&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ResetModeAndGranularity&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.ResetModeAndGranularity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm *Merger) ResetModeAndGranularity()
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;merger-saturatingaddhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol51-httpspkggodevinternalcoveragecmergego1201mergersaturatingadd&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SaturatingAdd&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.SaturatingAdd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (m *Merger) SaturatingAdd(dst, src uint32) uint32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Saturating add does a saturating addition of &amp;lsquo;dst&amp;rsquo; and &amp;lsquo;src&amp;rsquo;, returning added value or math.MaxUint32 if there is an overflow. Overflows are recorded in case the client needs to track them.&lt;/p&gt;
&lt;h4 id=&#34;merger-setmodeandgranularityhttpscsopensourcegooglegogogo1201srcinternalcoveragecmergemergegol77-httpspkggodevinternalcoveragecmergego1201mergersetmodeandgranularity&#34;&gt;(*Merger) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/cmerge/merge.go;l=77&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetModeAndGranularity&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/cmerge@go1.20.1#Merger.SetModeAndGranularity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cm *Merger) SetModeAndGranularity(mdf string, cmode coverage.CounterMode, cgran coverage.CounterGranularity) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetModeAndGranularity records the counter mode and granularity for the current merge. In the specific case of merging across coverage data files from different binaries, where we&amp;rsquo;re combining data from more than one meta-data file, we need to check for mode/granularity clashes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_decodecounter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_decodecounter/</guid>
      <description>
        
        
        &lt;h1 id=&#34;decodecounter&#34;&gt;decodecounter&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragedecodecountergo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-counterdatareaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol22-httpspkggodevinternalcoveragedecodecountergo1201counterdatareader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterDataReader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterDataReader struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newcounterdatareaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol39-httpspkggodevinternalcoveragedecodecountergo1201newcounterdatareader&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=39&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCounterDataReader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#NewCounterDataReader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCounterDataReader(fn string, rs io.ReadSeeker) (*CounterDataReader, error)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;counterdatareader-beginnextsegmenthttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol243-httpspkggodevinternalcoveragedecodecountergo1201counterdatareaderbeginnextsegment&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=243&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BeginNextSegment&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.BeginNextSegment&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) BeginNextSegment() (bool, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;BeginNextSegment sets up the the reader to read the next segment, returning TRUE if we do have another segment to read, or FALSE if we&amp;rsquo;re done with all the segments (also an error if something went wrong).&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-goarchhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol222-httpspkggodevinternalcoveragedecodecountergo1201counterdatareadergoarch&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Goarch&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.Goarch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) Goarch() string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Goarch returns the GOARCH setting in effect for the &amp;ldquo;-cover&amp;rdquo; binary that produced this counter data file. The GOARCH value may be empty in the case where the counter data file was produced from a merge in which more than one GOARCH value was present.&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-gooshttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol214-httpspkggodevinternalcoveragedecodecountergo1201counterdatareadergoos&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=214&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Goos&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.Goos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) Goos() string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Goos returns the GOOS setting in effect for the &amp;ldquo;-cover&amp;rdquo; binary that produced this counter data file. The GOOS value may be empty in the case where the counter data file was produced from a merge in which more than one GOOS value was present.&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-nextfunchttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol274-httpspkggodevinternalcoveragedecodecountergo1201counterdatareadernextfunc&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=274&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NextFunc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.NextFunc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) NextFunc(p *FuncPayload) (bool, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NextFunc reads data for the next function in this current segment into &amp;ldquo;p&amp;rdquo;, returning TRUE if the read was successful or FALSE if we&amp;rsquo;ve read all the functions already (also an error if something went wrong with the read or we hit a premature EOF).&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-numfunctionsinsegmenthttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol263-httpspkggodevinternalcoveragedecodecountergo1201counterdatareadernumfunctionsinsegment&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=263&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumFunctionsInSegment&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.NumFunctionsInSegment&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) NumFunctionsInSegment() uint32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NumFunctionsInSegment returns the number of live functions in the currently selected segment.&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-numsegmentshttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol235-httpspkggodevinternalcoveragedecodecountergo1201counterdatareadernumsegments&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=235&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumSegments&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.NumSegments&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) NumSegments() uint32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NumSegments returns the number of execution segments in the file.&lt;/p&gt;
&lt;h4 id=&#34;counterdatareader-osargshttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol206-httpspkggodevinternalcoveragedecodecountergo1201counterdatareaderosargs&#34;&gt;(*CounterDataReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=206&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OsArgs&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#CounterDataReader.OsArgs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cdr *CounterDataReader) OsArgs() []string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;OsArgs returns the program arguments (saved from os.Args during the run of the instrumented binary) read from the counter data file. Not all coverage data files will have os.Args values; for example, if a data file is produced by merging coverage data from two distinct runs, no os args will be available (an empty list is returned).&lt;/p&gt;
&lt;h3 id=&#34;type-funcpayloadhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodecounterdecodecounterfilegol228-httpspkggodevinternalcoveragedecodecountergo1201funcpayload&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodecounter/decodecounterfile.go;l=228&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FuncPayload&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodecounter@go1.20.1#FuncPayload&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type FuncPayload struct {
	PkgIdx   uint32
	FuncIdx  uint32
	Counters []uint32
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FuncPayload encapsulates the counter data payload for a single function as read from a counter data file.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_decodemeta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_decodemeta/</guid>
      <description>
        
        
        &lt;h1 id=&#34;decodemeta&#34;&gt;decodemeta&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoveragedecodemetago1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-coveragemetadatadecoderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol22-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecoder&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverageMetaDataDecoder&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverageMetaDataDecoder struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newcoveragemetadatadecoderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol30-httpspkggodevinternalcoveragedecodemetago1201newcoveragemetadatadecoder&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=30&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCoverageMetaDataDecoder&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#NewCoverageMetaDataDecoder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCoverageMetaDataDecoder(b []byte, readonly bool) (*CoverageMetaDataDecoder, error)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatadecoder-modulepathhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol74-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecodermodulepath&#34;&gt;(*CoverageMetaDataDecoder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=74&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ModulePath&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder.ModulePath&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (d *CoverageMetaDataDecoder) ModulePath() string
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatadecoder-numfuncshttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol78-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecodernumfuncs&#34;&gt;(*CoverageMetaDataDecoder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=78&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumFuncs&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder.NumFuncs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (d *CoverageMetaDataDecoder) NumFuncs() uint32
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatadecoder-packagenamehttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol70-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecoderpackagename&#34;&gt;(*CoverageMetaDataDecoder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=70&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PackageName&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder.PackageName&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (d *CoverageMetaDataDecoder) PackageName() string
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatadecoder-packagepathhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol66-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecoderpackagepath&#34;&gt;(*CoverageMetaDataDecoder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=66&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PackagePath&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder.PackagePath&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (d *CoverageMetaDataDecoder) PackagePath() string
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatadecoder-readfunchttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodegol84-httpspkggodevinternalcoveragedecodemetago1201coveragemetadatadecoderreadfunc&#34;&gt;(*CoverageMetaDataDecoder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decode.go;l=84&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadFunc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaDataDecoder.ReadFunc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (d *CoverageMetaDataDecoder) ReadFunc(fidx uint32, f *coverage.FuncDesc) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadFunc reads the coverage meta-data for the function with index &amp;lsquo;findex&amp;rsquo;, filling it into the FuncDesc pointed to by &amp;lsquo;f&amp;rsquo;.&lt;/p&gt;
&lt;h3 id=&#34;type-coveragemetafilereaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol27-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereader&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=27&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverageMetaFileReader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverageMetaFileReader struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CoverageMetaFileReader provides state and methods for reading a meta-data file from a code coverage run.&lt;/p&gt;
&lt;h4 id=&#34;func-newcoveragemetafilereaderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol45-httpspkggodevinternalcoveragedecodemetago1201newcoveragemetafilereader&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=45&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCoverageMetaFileReader&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#NewCoverageMetaFileReader&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCoverageMetaFileReader(f *os.File, fileView []byte) (*CoverageMetaFileReader, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NewCoverageMetaFileReader returns a new helper object for reading the coverage meta-data output file &amp;lsquo;f&amp;rsquo;. The param &amp;lsquo;fileView&amp;rsquo; is a read-only slice containing the contents of &amp;lsquo;f&amp;rsquo; obtained by mmap&amp;rsquo;ing the file read-only; &amp;lsquo;fileView&amp;rsquo; may be nil, in which case the helper will read the contents of the file using regular file Read operations.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-countergranularityhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol153-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereadercountergranularity&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=153&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterGranularity&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.CounterGranularity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) CounterGranularity() coverage.CounterGranularity
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterMode returns the counter granularity (single counter per function, or counter per block) selected when building for coverage for the program that produce this meta-data file.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-countermodehttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol146-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereadercountermode&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=146&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterMode&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.CounterMode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) CounterMode() coverage.CounterMode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterMode returns the counter mode (set, count, atomic) used when building for coverage for the program that produce this meta-data file.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-filehashhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol160-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereaderfilehash&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=160&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FileHash&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.FileHash&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) FileHash() [16]byte
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FileHash returns the hash computed for all of the package meta-data blobs. Coverage counter data files refer to this hash, and the hash will be encoded into the meta-data file name.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-getpackagedecoderhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol171-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereadergetpackagedecoder&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=171&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GetPackageDecoder&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.GetPackageDecoder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) GetPackageDecoder(pkIdx uint32, payloadbuf []byte) (*CoverageMetaDataDecoder, []byte, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GetPackageDecoder requests a decoder object for the package within the meta-data file whose index is &amp;lsquo;pkIdx&amp;rsquo;. If the CoverageMetaFileReader was set up with a read-only file view, a pointer into that file view will be returned, otherwise the buffer &amp;lsquo;payloadbuf&amp;rsquo; will be written to (or if it is not of sufficient size, a new buffer will be allocated). Return value is the decoder, a byte slice with the encoded meta-data, and an error.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-getpackagepayloadhttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol194-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereadergetpackagepayload&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=194&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GetPackagePayload&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.GetPackagePayload&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) GetPackagePayload(pkIdx uint32, payloadbuf []byte) ([]byte, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GetPackagePayload returns the raw (encoded) meta-data payload for the package with index &amp;lsquo;pkIdx&amp;rsquo;. As with GetPackageDecoder, if the CoverageMetaFileReader was set up with a read-only file view, a pointer into that file view will be returned, otherwise the buffer &amp;lsquo;payloadbuf&amp;rsquo; will be written to (or if it is not of sufficient size, a new buffer will be allocated). Return value is the decoder, a byte slice with the encoded meta-data, and an error.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetafilereader-numpackageshttpscsopensourcegooglegogogo1201srcinternalcoveragedecodemetadecodefilegol139-httpspkggodevinternalcoveragedecodemetago1201coveragemetafilereadernumpackages&#34;&gt;(*CoverageMetaFileReader) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/decodemeta/decodefile.go;l=139&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumPackages&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/decodemeta@go1.20.1#CoverageMetaFileReader.NumPackages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (r *CoverageMetaFileReader) NumPackages() uint64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NumPackages returns the number of packages for which this file contains meta-data.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_encodecounter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_encodecounter/</guid>
      <description>
        
        
        &lt;h1 id=&#34;encodecounter&#34;&gt;encodecounter&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoverageencodecountergo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-countervisitorhttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol55-httpspkggodevinternalcoverageencodecountergo1201countervisitor&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=55&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterVisitor&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#CounterVisitor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterVisitor interface {
	NumFuncs() (int, error)
	VisitFuncs(f CounterVisitorFn) error
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterVisitor describes a helper object used during counter file writing; when writing counter data files, clients pass a CounterVisitor to the write/emit routines. The writers will then first invoke the visitor&amp;rsquo;s NumFuncs() method to find out how many function&amp;rsquo;s worth of data to write, then it will invoke VisitFuncs. The expectation is that the VisitFuncs method will then invoke the callback &amp;ldquo;f&amp;rdquo; with data for each function to emit to the file.&lt;/p&gt;
&lt;h3 id=&#34;type-countervisitorfnhttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol62-httpspkggodevinternalcoverageencodecountergo1201countervisitorfn&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=62&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CounterVisitorFn&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#CounterVisitorFn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CounterVisitorFn func(pkid uint32, funcid uint32, counters []uint32) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CounterVisitorFn describes a callback function invoked when writing coverage counter data.&lt;/p&gt;
&lt;h3 id=&#34;type-coveragedatawriterhttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol26-httpspkggodevinternalcoverageencodecountergo1201coveragedatawriter&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=26&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverageDataWriter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#CoverageDataWriter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverageDataWriter struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newcoveragedatawriterhttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol35-httpspkggodevinternalcoverageencodecountergo1201newcoveragedatawriter&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=35&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCoverageDataWriter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#NewCoverageDataWriter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCoverageDataWriter(w io.Writer, flav coverage.CounterFlavor) *CoverageDataWriter
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragedatawriter-appendsegmenthttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol161-httpspkggodevinternalcoverageencodecountergo1201coveragedatawriterappendsegment&#34;&gt;(*CoverageDataWriter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=161&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AppendSegment&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#CoverageDataWriter.AppendSegment&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cfw *CoverageDataWriter) AppendSegment(args map[string]string, visitor CounterVisitor) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AppendSegment appends a new segment to a counter data, with a new args section followed by a payload of counter data clauses.&lt;/p&gt;
&lt;h4 id=&#34;coveragedatawriter-writehttpscsopensourcegooglegogogo1201srcinternalcoverageencodecounterencodegol67-httpspkggodevinternalcoverageencodecountergo1201coveragedatawriterwrite&#34;&gt;(*CoverageDataWriter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodecounter/encode.go;l=67&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodecounter@go1.20.1#CoverageDataWriter.Write&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (cfw *CoverageDataWriter) Write(metaFileHash [16]byte, args map[string]string, visitor CounterVisitor) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Write writes the contents of the count-data file to the writer previously supplied to NewCoverageDataWriter. Returns an error if something went wrong somewhere with the write.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_encodemeta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_encodemeta/</guid>
      <description>
        
        
        &lt;h1 id=&#34;encodemeta&#34;&gt;encodemeta&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalcoverageencodemetago1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-hashfuncdeschttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodegol190-httpspkggodevinternalcoverageencodemetago1201hashfuncdesc&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encode.go;l=190&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashFuncDesc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#HashFuncDesc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func HashFuncDesc(f *coverage.FuncDesc) [16]byte
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HashFuncDesc computes an md5 sum of a coverage.FuncDesc and returns a digest for it.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-coveragemetadatabuilderhttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodegol24-httpspkggodevinternalcoverageencodemetago1201coveragemetadatabuilder&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encode.go;l=24&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverageMetaDataBuilder&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#CoverageMetaDataBuilder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverageMetaDataBuilder struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newcoveragemetadatabuilderhttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodegol36-httpspkggodevinternalcoverageencodemetago1201newcoveragemetadatabuilder&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encode.go;l=36&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCoverageMetaDataBuilder&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#NewCoverageMetaDataBuilder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCoverageMetaDataBuilder(pkgpath string, pkgname string, modulepath string) (*CoverageMetaDataBuilder, error)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetadatabuilder-addfunchttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodegol67-httpspkggodevinternalcoverageencodemetago1201coveragemetadatabuilderaddfunc&#34;&gt;(*CoverageMetaDataBuilder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encode.go;l=67&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AddFunc&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#CoverageMetaDataBuilder.AddFunc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (b *CoverageMetaDataBuilder) AddFunc(f coverage.FuncDesc) uint
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AddFunc registers a new function with the meta data builder.&lt;/p&gt;
&lt;h4 id=&#34;coveragemetadatabuilder-emithttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodegol131-httpspkggodevinternalcoverageencodemetago1201coveragemetadatabuilderemit&#34;&gt;(*CoverageMetaDataBuilder) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encode.go;l=131&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emit&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#CoverageMetaDataBuilder.Emit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (b *CoverageMetaDataBuilder) Emit(w io.WriteSeeker) ([16]byte, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Emit writes the meta-data accumulated so far in this builder to &amp;lsquo;w&amp;rsquo;. Returns a hash of the meta-data payload and an error.&lt;/p&gt;
&lt;h3 id=&#34;type-coveragemetafilewriterhttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodefilegol23-httpspkggodevinternalcoverageencodemetago1201coveragemetafilewriter&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encodefile.go;l=23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoverageMetaFileWriter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#CoverageMetaFileWriter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type CoverageMetaFileWriter struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;func-newcoveragemetafilewriterhttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodefilegol31-httpspkggodevinternalcoverageencodemetago1201newcoveragemetafilewriter&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encodefile.go;l=31&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NewCoverageMetaFileWriter&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#NewCoverageMetaFileWriter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func NewCoverageMetaFileWriter(mfname string, w io.Writer) *CoverageMetaFileWriter
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;coveragemetafilewriter-writehttpscsopensourcegooglegogogo1201srcinternalcoverageencodemetaencodefilegol42-httpspkggodevinternalcoverageencodemetago1201coveragemetafilewriterwrite&#34;&gt;(*CoverageMetaFileWriter) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/coverage/encodemeta/encodefile.go;l=42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/coverage/encodemeta@go1.20.1#CoverageMetaFileWriter.Write&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (m *CoverageMetaFileWriter) Write(finalHash [16]byte, blobs [][]byte, mode coverage.CounterMode, granularity coverage.CounterGranularity) error
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_pods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_pods/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_rtcov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_rtcov/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_slicereader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_slicereader/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_slicewriter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_slicewriter/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_stringtab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_stringtab/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/coverage_uleb128/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/coverage_uleb128/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/cpu/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/dag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/dag/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/diff/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/fmtsort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/fmtsort/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/fuzz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/fuzz/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/goarch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/goarch/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/godebug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/godebug/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/goexperiment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/goexperiment/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/goos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/goos/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/goroot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/goroot/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/goversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/goversion/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/intern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/intern/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/itoa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/itoa/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/lazyregexp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/lazyregexp/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/lazytemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/lazytemplate/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/nettrace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/nettrace/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/obsuretestada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/obsuretestada/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/oserror/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/oserror/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/pkgbits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/pkgbits/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/platform/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/poll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/poll/</guid>
      <description>
        
        
        &lt;h1 id=&#34;poll&#34;&gt;poll&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/poll@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package poll supports non-blocking I/O on file descriptors with polling. This supports I/O operations that block only a goroutine, not a thread. This is used by the net and os packages. It uses a poller built into the runtime, with support from the runtime scheduler.&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalpollgo1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/hook_cloexec.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var Accept4Func func(int, int) (int, syscall.Sockaddr, error) = syscall.Accept4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Accept4Func is used to hook the accept4 call.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/hook_unix.go;l=15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var AcceptFunc func(int) (int, syscall.Sockaddr, error) = syscall.Accept
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AcceptFunc is used to hook the accept call.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/hook_unix.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var CloseFunc func(int) error = syscall.Close
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CloseFunc is used to hook the close call.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var ErrDeadlineExceeded error = &amp;amp;DeadlineExceededError{}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ErrDeadlineExceeded is returned for an expired deadline. This is exported by the os package as os.ErrDeadlineExceeded.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=35&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var ErrFileClosing = errors.New(&amp;#34;use of closed file&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ErrFileClosing is returned when a file descriptor is used after it has been closed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=31&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var ErrNetClosing = errNetClosing{}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ErrNetClosing is returned when a network descriptor is used after it has been closed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=39&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var ErrNoDeadline = errors.New(&amp;#34;file type does not support deadline&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ErrNoDeadline is returned when a request is made to set a deadline on a file type that does not use the poller.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=66&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var ErrNotPollable = errors.New(&amp;#34;not pollable&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ErrNotPollable is returned when the file or socket is not suitable for event notification.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=83&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var TestHookDidWritev = func(wrote int) {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TestHookDidWritev is a hook for testing writev.&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;h4 id=&#34;func-copyfilerangehttpscsopensourcegooglegogogo1201srcinternalpollcopy_file_range_linuxgol22-httpspkggodevinternalpollgo1201copyfilerangeadded-in-go115&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/copy_file_range_linux.go;l=22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CopyFileRange&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#CopyFileRange&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func CopyFileRange(dst, src *FD, remain int64) (written int64, handled bool, err error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CopyFileRange copies at most remain bytes of data from src to dst, using the copy_file_range system call. dst and src must refer to regular files.&lt;/p&gt;
&lt;h4 id=&#34;func-dupcloseonexechttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol696-httpspkggodevinternalpollgo1201dupcloseonexecadded-in-go111&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=696&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DupCloseOnExec&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#DupCloseOnExec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.11&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func DupCloseOnExec(fd int) (int, string, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DupCloseOnExec dups fd and marks it close-on-exec.&lt;/p&gt;
&lt;h4 id=&#34;func-ispolldescriptorhttpscsopensourcegooglegogogo1201srcinternalpollfd_poll_runtimegol167-httpspkggodevinternalpollgo1201ispolldescriptoradded-in-go112&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_poll_runtime.go;l=167&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IsPollDescriptor&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#IsPollDescriptor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.12&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func IsPollDescriptor(fd uintptr) bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IsPollDescriptor reports whether fd is the descriptor being used by the poller. This is only used for testing.&lt;/p&gt;
&lt;h4 id=&#34;func-sendfilehttpscsopensourcegooglegogogo1201srcinternalpollsendfile_linuxgol14-httpspkggodevinternalpollgo1201sendfile&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sendfile_linux.go;l=14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SendFile&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#SendFile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func SendFile(dstFD *FD, src int, remain int64) (int64, error, bool)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SendFile wraps the sendfile system call.&lt;/p&gt;
&lt;h4 id=&#34;func-splicehttpscsopensourcegooglegogogo1201srcinternalpollsplice_linuxgol32-httpspkggodevinternalpollgo1201spliceadded-in-go111&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/splice_linux.go;l=32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Splice&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#Splice&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.11&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Splice(dst, src *FD, remain int64) (written int64, handled bool, sc string, err error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Splice transfers at most remain bytes of data from src to dst, using the splice system call to minimize copies of data from and to userspace.&lt;/p&gt;
&lt;p&gt;Splice gets a pipe buffer from the pool or creates a new one if needed, to serve as a buffer for the data transfer. src and dst must both be stream-oriented sockets.&lt;/p&gt;
&lt;p&gt;If err != nil, sc is the system call which caused the error.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-deadlineexceedederrorhttpscsopensourcegooglegogogo1201srcinternalpollfdgol54-httpspkggodevinternalpollgo1201deadlineexceedederroradded-in-go115&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=54&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DeadlineExceededError&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#DeadlineExceededError&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type DeadlineExceededError struct{}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DeadlineExceededError is returned for an expired deadline.&lt;/p&gt;
&lt;h4 id=&#34;deadlineexceedederror-errorhttpscsopensourcegooglegogogo1201srcinternalpollfdgol60-httpspkggodevinternalpollgo1201deadlineexceedederrorerroradded-in-go115&#34;&gt;(*DeadlineExceededError) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=60&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Error&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#DeadlineExceededError.Error&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (e *DeadlineExceededError) Error() string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Implement the net.Error interface. The string is &amp;ldquo;i/o timeout&amp;rdquo; because that is what was returned by earlier Go versions. Changing it may break programs that match on error strings.&lt;/p&gt;
&lt;h4 id=&#34;deadlineexceedederror-temporaryhttpscsopensourcegooglegogogo1201srcinternalpollfdgol62-httpspkggodevinternalpollgo1201deadlineexceedederrortemporaryadded-in-go115&#34;&gt;(*DeadlineExceededError) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=62&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Temporary&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#DeadlineExceededError.Temporary&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (e *DeadlineExceededError) Temporary() bool
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;deadlineexceedederror-timeouthttpscsopensourcegooglegogogo1201srcinternalpollfdgol61-httpspkggodevinternalpollgo1201deadlineexceedederrortimeoutadded-in-go115&#34;&gt;(*DeadlineExceededError) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd.go;l=61&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Timeout&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#DeadlineExceededError.Timeout&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.15&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (e *DeadlineExceededError) Timeout() bool
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;type-fdhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol18-httpspkggodevinternalpollgo1201fd&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=18&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FD&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type FD struct {

	// System file descriptor. Immutable until Close.
	Sysfd int

	// Whether this is a streaming descriptor, as opposed to a
	// packet-based descriptor like a UDP socket. Immutable.
	IsStream bool

	// Whether a zero byte read indicates EOF. This is false for a
	// message based socket connection.
	ZeroReadIsEOF bool
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FD is a file descriptor. The net and os packages use this type as a field of a larger type representing a network connection or OS file.&lt;/p&gt;
&lt;h4 id=&#34;fd-accepthttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol595-httpspkggodevinternalpollgo1201fdaccept&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=595&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Accept&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Accept&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Accept() (int, syscall.Sockaddr, string, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Accept wraps the accept network call.&lt;/p&gt;
&lt;h4 id=&#34;fd-closehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol93-httpspkggodevinternalpollgo1201fdclose&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=93&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Close&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Close&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Close() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Close closes the FD. The underlying file descriptor is closed by the destroy method when there are no remaining references.&lt;/p&gt;
&lt;h4 id=&#34;fd-duphttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol729-httpspkggodevinternalpollgo1201fddupadded-in-go111&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=729&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dup&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Dup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.11&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Dup() (int, string, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dup duplicates the file descriptor.&lt;/p&gt;
&lt;h4 id=&#34;fd-fchdirhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol672-httpspkggodevinternalpollgo1201fdfchdir&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=672&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fchdir&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Fchdir&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Fchdir() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fchdir wraps syscall.Fchdir.&lt;/p&gt;
&lt;h4 id=&#34;fd-fchmodhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol661-httpspkggodevinternalpollgo1201fdfchmod&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=661&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fchmod&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Fchmod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Fchmod(mode uint32) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fchmod wraps syscall.Fchmod.&lt;/p&gt;
&lt;h4 id=&#34;fd-fchownhttpscsopensourcegooglegogogo1201srcinternalpollfd_posixgol33-httpspkggodevinternalpollgo1201fdfchown&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_posix.go;l=33&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fchown&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Fchown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Fchown(uid, gid int) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fchown wraps syscall.Fchown.&lt;/p&gt;
&lt;h4 id=&#34;fd-fstathttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol681-httpspkggodevinternalpollgo1201fdfstat&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=681&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fstat&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Fstat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Fstat(s *syscall.Stat_t) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fstat wraps syscall.Fstat&lt;/p&gt;
&lt;h4 id=&#34;fd-fsynchttpscsopensourcegooglegogogo1201srcinternalpollfd_fsync_posixgol12-httpspkggodevinternalpollgo1201fdfsync&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_fsync_posix.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fsync&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Fsync&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Fsync() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fsync wraps syscall.Fsync.&lt;/p&gt;
&lt;h4 id=&#34;fd-ftruncatehttpscsopensourcegooglegogogo1201srcinternalpollfd_posixgol44-httpspkggodevinternalpollgo1201fdftruncate&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_posix.go;l=44&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ftruncate&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Ftruncate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Ftruncate(size int64) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ftruncate wraps syscall.Ftruncate.&lt;/p&gt;
&lt;h4 id=&#34;fd-inithttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol54-httpspkggodevinternalpollgo1201fdinit&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=54&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Init&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Init&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Init(net string, pollable bool) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Init initializes the FD. The Sysfd field should already be set. This can be called multiple times on a single FD. The net argument is a network name from the net package (e.g., &amp;ldquo;tcp&amp;rdquo;), or &amp;ldquo;file&amp;rdquo;. Set pollable to true if fd should be managed by runtime netpoll.&lt;/p&gt;
&lt;h4 id=&#34;fd-preadhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol178-httpspkggodevinternalpollgo1201fdpread&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=178&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pread&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Pread&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Pread(p []byte, off int64) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pread wraps the pread system call.&lt;/p&gt;
&lt;h4 id=&#34;fd-pwritehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol405-httpspkggodevinternalpollgo1201fdpwrite&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=405&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pwrite&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Pwrite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Pwrite(p []byte, off int64) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pwrite wraps the pwrite system call.&lt;/p&gt;
&lt;h4 id=&#34;fd-rawcontrolhttpscsopensourcegooglegogogo1201srcinternalpollfd_posixgol56-httpspkggodevinternalpollgo1201fdrawcontrol&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_posix.go;l=56&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RawControl&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.RawControl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) RawControl(f func(uintptr)) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;RawControl invokes the user-defined function f for a non-IO operation.&lt;/p&gt;
&lt;h4 id=&#34;fd-rawreadhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol754-httpspkggodevinternalpollgo1201fdrawread&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=754&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RawRead&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.RawRead&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) RawRead(f func(uintptr) bool) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;RawRead invokes the user-defined function f for a read operation.&lt;/p&gt;
&lt;h4 id=&#34;fd-rawwritehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol773-httpspkggodevinternalpollgo1201fdrawwrite&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=773&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RawWrite&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.RawWrite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) RawWrite(f func(uintptr) bool) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;RawWrite invokes the user-defined function f for a write operation.&lt;/p&gt;
&lt;h4 id=&#34;fd-readhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol143-httpspkggodevinternalpollgo1201fdread&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=143&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Read&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Read(p []byte) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Read implements io.Reader.&lt;/p&gt;
&lt;h4 id=&#34;fd-readdirenthttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol640-httpspkggodevinternalpollgo1201fdreaddirent&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=640&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadDirent&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadDirent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadDirent(buf []byte) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadDirent wraps syscall.ReadDirent. We treat this like an ordinary system call rather than a call that tries to fill the buffer.&lt;/p&gt;
&lt;h4 id=&#34;fd-readfromhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol207-httpspkggodevinternalpollgo1201fdreadfrom&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=207&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadFrom&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadFrom&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadFrom(p []byte) (int, syscall.Sockaddr, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadFrom wraps the recvfrom network call.&lt;/p&gt;
&lt;h4 id=&#34;fd-readfrominet4httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol234-httpspkggodevinternalpollgo1201fdreadfrominet4added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=234&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadFromInet4&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadFromInet4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadFromInet4(p []byte, from *syscall.SockaddrInet4) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadFromInet4 wraps the recvfrom network call for IPv4.&lt;/p&gt;
&lt;h4 id=&#34;fd-readfrominet6httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol261-httpspkggodevinternalpollgo1201fdreadfrominet6added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=261&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadFromInet6&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadFromInet6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadFromInet6(p []byte, from *syscall.SockaddrInet6) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadFromInet6 wraps the recvfrom network call for IPv6.&lt;/p&gt;
&lt;h4 id=&#34;fd-readmsghttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol288-httpspkggodevinternalpollgo1201fdreadmsg&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=288&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadMsg&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadMsg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadMsg(p []byte, oob []byte, flags int) (int, int, int, syscall.Sockaddr, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadMsg wraps the recvmsg network call.&lt;/p&gt;
&lt;h4 id=&#34;fd-readmsginet4httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol315-httpspkggodevinternalpollgo1201fdreadmsginet4added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=315&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadMsgInet4&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadMsgInet4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadMsgInet4(p []byte, oob []byte, flags int, sa4 *syscall.SockaddrInet4) (int, int, int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadMsgInet4 is ReadMsg, but specialized for syscall.SockaddrInet4.&lt;/p&gt;
&lt;h4 id=&#34;fd-readmsginet6httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol342-httpspkggodevinternalpollgo1201fdreadmsginet6added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=342&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadMsgInet6&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.ReadMsgInet6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) ReadMsgInet6(p []byte, oob []byte, flags int, sa6 *syscall.SockaddrInet6) (int, int, int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ReadMsgInet6 is ReadMsg, but specialized for syscall.SockaddrInet6.&lt;/p&gt;
&lt;h4 id=&#34;fd-seekhttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol629-httpspkggodevinternalpollgo1201fdseek&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=629&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seek&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Seek&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Seek(offset int64, whence int) (int64, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Seek wraps syscall.Seek.&lt;/p&gt;
&lt;h4 id=&#34;fd-setblockinghttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol123-httpspkggodevinternalpollgo1201fdsetblockingadded-in-go110&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=123&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetBlocking&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetBlocking&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.10&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetBlocking() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetBlocking puts the file into blocking mode.&lt;/p&gt;
&lt;h4 id=&#34;fd-setdeadlinehttpscsopensourcegooglegogogo1201srcinternalpollfd_poll_runtimegol132-httpspkggodevinternalpollgo1201fdsetdeadline&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_poll_runtime.go;l=132&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetDeadline&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetDeadline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetDeadline(t time.Time) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetDeadline sets the read and write deadlines associated with fd.&lt;/p&gt;
&lt;h4 id=&#34;fd-setreaddeadlinehttpscsopensourcegooglegogogo1201srcinternalpollfd_poll_runtimegol137-httpspkggodevinternalpollgo1201fdsetreaddeadline&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_poll_runtime.go;l=137&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetReadDeadline&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetReadDeadline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetReadDeadline(t time.Time) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetReadDeadline sets the read deadline associated with fd.&lt;/p&gt;
&lt;h4 id=&#34;fd-setwritedeadlinehttpscsopensourcegooglegogogo1201srcinternalpollfd_poll_runtimegol142-httpspkggodevinternalpollgo1201fdsetwritedeadline&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_poll_runtime.go;l=142&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetWriteDeadline&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetWriteDeadline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetWriteDeadline(t time.Time) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetWriteDeadline sets the write deadline associated with fd.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptbytehttpscsopensourcegooglegogogo1201srcinternalpollsockopt_unixgol12-httpspkggodevinternalpollgo1201fdsetsockoptbyte&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockopt_unix.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptByte&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptByte&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptByte(level, name int, arg byte) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptByte wraps the setsockopt network call with a byte argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptipmreqhttpscsopensourcegooglegogogo1201srcinternalpollsockoptipgol12-httpspkggodevinternalpollgo1201fdsetsockoptipmreq&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockoptip.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptIPMreq&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptIPMreq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptIPMreq(level, name int, mreq *syscall.IPMreq) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptIPMreq wraps the setsockopt network call with an IPMreq argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptipmreqnhttpscsopensourcegooglegogogo1201srcinternalpollsockopt_linuxgol10-httpspkggodevinternalpollgo1201fdsetsockoptipmreqn&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockopt_linux.go;l=10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptIPMreqn&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptIPMreqn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptIPMreqn(level, name int, mreq *syscall.IPMreqn) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptIPMreqn wraps the setsockopt network call with an IPMreqn argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptipv6mreqhttpscsopensourcegooglegogogo1201srcinternalpollsockoptipgol21-httpspkggodevinternalpollgo1201fdsetsockoptipv6mreq&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockoptip.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptIPv6Mreq&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptIPv6Mreq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptIPv6Mreq(level, name int, mreq *syscall.IPv6Mreq) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptIPv6Mreq wraps the setsockopt network call with an IPv6Mreq argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptinet4addrhttpscsopensourcegooglegogogo1201srcinternalpollsockoptgol21-httpspkggodevinternalpollgo1201fdsetsockoptinet4addr&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockopt.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptInet4Addr&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptInet4Addr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptInet4Addr(level, name int, arg [4]byte) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptInet4Addr wraps the setsockopt network call with an IPv4 address.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptinthttpscsopensourcegooglegogogo1201srcinternalpollsockoptgol12-httpspkggodevinternalpollgo1201fdsetsockoptint&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockopt.go;l=12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptInt&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptInt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptInt(level, name, arg int) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptInt wraps the setsockopt network call with an int argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-setsockoptlingerhttpscsopensourcegooglegogogo1201srcinternalpollsockoptgol30-httpspkggodevinternalpollgo1201fdsetsockoptlinger&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/sockopt.go;l=30&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SetsockoptLinger&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.SetsockoptLinger&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) SetsockoptLinger(level, name int, l *syscall.Linger) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SetsockoptLinger wraps the setsockopt network call with a Linger argument.&lt;/p&gt;
&lt;h4 id=&#34;fd-shutdownhttpscsopensourcegooglegogogo1201srcinternalpollfd_posixgol24-httpspkggodevinternalpollgo1201fdshutdown&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_posix.go;l=24&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shutdown&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Shutdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Shutdown(how int) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Shutdown wraps syscall.Shutdown.&lt;/p&gt;
&lt;h4 id=&#34;fd-waitwritehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol740-httpspkggodevinternalpollgo1201fdwaitwrite&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=740&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WaitWrite&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WaitWrite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WaitWrite() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WaitWrite waits until data can be read from fd.&lt;/p&gt;
&lt;h4 id=&#34;fd-writehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol369-httpspkggodevinternalpollgo1201fdwrite&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=369&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Write&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Write(p []byte) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Write implements io.Writer.&lt;/p&gt;
&lt;h4 id=&#34;fd-writemsghttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol517-httpspkggodevinternalpollgo1201fdwritemsg&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=517&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteMsg&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteMsg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteMsg(p []byte, oob []byte, sa syscall.Sockaddr) (int, int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteMsg wraps the sendmsg network call.&lt;/p&gt;
&lt;h4 id=&#34;fd-writemsginet4httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol543-httpspkggodevinternalpollgo1201fdwritemsginet4added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=543&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteMsgInet4&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteMsgInet4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteMsgInet4(p []byte, oob []byte, sa *syscall.SockaddrInet4) (int, int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteMsgInet4 is WriteMsg specialized for syscall.SockaddrInet4.&lt;/p&gt;
&lt;h4 id=&#34;fd-writemsginet6httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol569-httpspkggodevinternalpollgo1201fdwritemsginet6added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=569&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteMsgInet6&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteMsgInet6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteMsgInet6(p []byte, oob []byte, sa *syscall.SockaddrInet6) (int, int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteMsgInet6 is WriteMsg specialized for syscall.SockaddrInet6.&lt;/p&gt;
&lt;h4 id=&#34;fd-writeoncehttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol745-httpspkggodevinternalpollgo1201fdwriteonceadded-in-go110&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=745&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteOnce&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteOnce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.10&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteOnce(p []byte) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteOnce is for testing only. It makes a single write call.&lt;/p&gt;
&lt;h4 id=&#34;fd-writetohttpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol491-httpspkggodevinternalpollgo1201fdwriteto&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=491&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteTo&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteTo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteTo(p []byte, sa syscall.Sockaddr) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteTo wraps the sendto network call.&lt;/p&gt;
&lt;h4 id=&#34;fd-writetoinet4httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol439-httpspkggodevinternalpollgo1201fdwritetoinet4added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=439&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteToInet4&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteToInet4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteToInet4(p []byte, sa *syscall.SockaddrInet4) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteToInet4 wraps the sendto network call for IPv4 addresses.&lt;/p&gt;
&lt;h4 id=&#34;fd-writetoinet6httpscsopensourcegooglegogogo1201srcinternalpollfd_unixgol465-httpspkggodevinternalpollgo1201fdwritetoinet6added-in-go118&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/fd_unix.go;l=465&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WriteToInet6&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.WriteToInet6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;added in go1.18&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) WriteToInet6(p []byte, sa *syscall.SockaddrInet6) (int, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WriteToInet6 wraps the sendto network call for IPv6 addresses.&lt;/p&gt;
&lt;h4 id=&#34;fd-writevhttpscsopensourcegooglegogogo1201srcinternalpollwritevgol16-httpspkggodevinternalpollgo1201fdwritev&#34;&gt;(*FD) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/poll/writev.go;l=16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Writev&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/poll@go1.20.1#FD.Writev&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (fd *FD) Writev(v *[][]byte) (int64, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Writev wraps the writev system call.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/profile/</guid>
      <description>
        
        
        &lt;h1 id=&#34;profile&#34;&gt;profile&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.go.dev/internal/profile@go1.20.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package profile provides a representation of github.com/google/pprof/proto/profile.proto and methods to encode/decode/merge profiles in this format.&lt;/p&gt;
&lt;h2 id=&#34;常量-httpspkggodevinternalprofilego1201pkg-constants&#34;&gt;常量 &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#pkg-constants&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/legacy_profile.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View Source&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var (

	// LegacyHeapAllocated instructs the heapz parsers to use the
	// allocated memory stats instead of the default in-use memory. Note
	// that tcmalloc doesn&amp;#39;t provide all allocated memory, only in-use
	// stats.
	LegacyHeapAllocated bool
)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;函数&#34;&gt;函数&lt;/h2&gt;
&lt;p&gt;This section is empty.&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;类型&lt;/h2&gt;
&lt;h3 id=&#34;type-demanglerhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol548-httpspkggodevinternalprofilego1201demangler&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=548&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demangler&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Demangler&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Demangler func(name []string) (map[string]string, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Demangler maps symbol names to a human-readable form. This may include C++ demangling and additional simplification. Names that are not demangled may be missing from the resulting map.&lt;/p&gt;
&lt;h3 id=&#34;type-functionhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol111-httpspkggodevinternalprofilego1201function&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=111&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Function&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Function&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Function struct {
	ID         uint64
	Name       string
	SystemName string
	Filename   string
	StartLine  int64
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Function corresponds to Profile.Function&lt;/p&gt;
&lt;h3 id=&#34;type-labelhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol67-httpspkggodevinternalprofilego1201label&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=67&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Label&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Label&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Label struct {
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Label corresponds to Profile.Label&lt;/p&gt;
&lt;h3 id=&#34;type-linehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol103-httpspkggodevinternalprofilego1201line&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=103&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Line&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Line&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Line struct {
	Function *Function
	Line     int64
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Line corresponds to Profile.Line&lt;/p&gt;
&lt;h3 id=&#34;type-locationhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol92-httpspkggodevinternalprofilego1201location&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=92&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Location&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Location&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Location struct {
	ID       uint64
	Mapping  *Mapping
	Address  uint64
	Line     []Line
	IsFolded bool
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Location corresponds to Profile.Location&lt;/p&gt;
&lt;h3 id=&#34;type-mappinghttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol75-httpspkggodevinternalprofilego1201mapping&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=75&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mapping&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Mapping&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Mapping struct {
	ID              uint64
	Start           uint64
	Limit           uint64
	Offset          uint64
	File            string
	BuildID         string
	HasFunctions    bool
	HasFilenames    bool
	HasLineNumbers  bool
	HasInlineFrames bool
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mapping corresponds to Profile.Mapping&lt;/p&gt;
&lt;h3 id=&#34;type-profilehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol21-httpspkggodevinternalprofilego1201profile&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Profile&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Profile struct {
	SampleType        []*ValueType
	DefaultSampleType string
	Sample            []*Sample
	Mapping           []*Mapping
	Location          []*Location
	Function          []*Function
	Comments          []string

	DropFrames string
	KeepFrames string

	TimeNanos     int64
	DurationNanos int64
	PeriodType    *ValueType
	Period        int64
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Profile is an in-memory representation of profile.proto.&lt;/p&gt;
&lt;h4 id=&#34;func-mergehttpscsopensourcegooglegogogo1201srcinternalprofilemergegol21-httpspkggodevinternalprofilego1201merge&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/merge.go;l=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Merge&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Merge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Merge(srcs []*Profile) (*Profile, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Merge merges all the profiles in profs into a single Profile. Returns a new profile independent of the input profiles. The merged profile is compacted to eliminate unused samples, locations, functions and mappings. Profiles must have identical profile sample and period types or the merge will fail. profile.Period of the resulting profile will be the maximum of all profiles, and profile.TimeNanos will be the earliest nonzero one.&lt;/p&gt;
&lt;h4 id=&#34;func-parsehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol126-httpspkggodevinternalprofilego1201parse&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=126&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parse&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Parse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func Parse(r io.Reader) (*Profile, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Parse parses a profile and checks for its validity. The input may be a gzip-compressed encoded protobuf or one of many legacy profile formats which may be unsupported in the future.&lt;/p&gt;
&lt;h4 id=&#34;func-parsetracebackshttpscsopensourcegooglegogogo1201srcinternalprofilelegacy_profilegol252-httpspkggodevinternalprofilego1201parsetracebacks&#34;&gt;func &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/legacy_profile.go;l=252&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ParseTracebacks&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#ParseTracebacks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func ParseTracebacks(b []byte) (*Profile, error)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ParseTracebacks parses a set of tracebacks and returns a newly populated profile. It will accept any text file and generate a Profile out of it with any hex addresses it can identify, including a process map if it can recognize one. Each sample will include a tag &amp;ldquo;source&amp;rdquo; with the addresses recognized in string format.&lt;/p&gt;
&lt;h4 id=&#34;profile-aggregatehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol294-httpspkggodevinternalprofilego1201profileaggregate&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=294&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aggregate&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Aggregate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Aggregate(inlineFrame, function, filename, linenumber, address bool) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Aggregate merges the locations in the profile into equivalence classes preserving the request attributes. It also updates the samples to point to the merged locations.&lt;/p&gt;
&lt;h4 id=&#34;profile-checkvalidhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol232-httpspkggodevinternalprofilego1201profilecheckvalid&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=232&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CheckValid&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.CheckValid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) CheckValid() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CheckValid tests whether the profile is valid. Checks include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;len(Profile.Sample[n].value) == len(Profile.value_unit)&lt;/li&gt;
&lt;li&gt;Sample.id has a corresponding Profile.Location&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;profile-compatiblehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol482-httpspkggodevinternalprofilego1201profilecompatible&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=482&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Compatible&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Compatible&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Compatible(pb *Profile) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Compatible determines if two profiles can be compared/merged. returns nil if the profiles are compatible; otherwise an error with details on the incompatibility.&lt;/p&gt;
&lt;h4 id=&#34;profile-copyhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol530-httpspkggodevinternalprofilego1201profilecopy&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=530&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Copy&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Copy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Copy() *Profile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy makes a fully independent copy of a profile.&lt;/p&gt;
&lt;h4 id=&#34;profile-demanglehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol553-httpspkggodevinternalprofilego1201profiledemangle&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=553&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demangle&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Demangle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Demangle(d Demangler) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Demangle attempts to demangle and optionally simplify any function names referenced in the profile. It works on a best-effort basis: it will silently preserve the original names in case of any errors.&lt;/p&gt;
&lt;h4 id=&#34;profile-emptyhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol574-httpspkggodevinternalprofilego1201profileempty&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=574&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Empty&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Empty&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Empty() bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Empty reports whether the profile contains no samples.&lt;/p&gt;
&lt;h4 id=&#34;profile-filtersamplesbynamehttpscsopensourcegooglegogogo1201srcinternalprofilefiltergol14-httpspkggodevinternalprofilego1201profilefiltersamplesbyname&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/filter.go;l=14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FilterSamplesByName&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.FilterSamplesByName&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) FilterSamplesByName(focus, ignore, hide *regexp.Regexp) (fm, im, hm bool)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FilterSamplesByName filters the samples in a profile and only keeps samples where at least one frame matches focus but none match ignore. Returns true is the corresponding regexp matched at least one sample.&lt;/p&gt;
&lt;h4 id=&#34;profile-filtersamplesbytaghttpscsopensourcegooglegogogo1201srcinternalprofilefiltergol119-httpspkggodevinternalprofilego1201profilefiltersamplesbytag&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/filter.go;l=119&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FilterSamplesByTag&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.FilterSamplesByTag&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) FilterSamplesByTag(focus, ignore TagMatch) (fm, im bool)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FilterSamplesByTag removes all samples from the profile, except those that match focus and do not match the ignore regular expression.&lt;/p&gt;
&lt;h4 id=&#34;profile-hasfilelineshttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol513-httpspkggodevinternalprofilego1201profilehasfilelines&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=513&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HasFileLines&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.HasFileLines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) HasFileLines() bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HasFileLines determines if all locations in this profile have symbolized file and line number information.&lt;/p&gt;
&lt;h4 id=&#34;profile-hasfunctionshttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol502-httpspkggodevinternalprofilego1201profilehasfunctions&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=502&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HasFunctions&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.HasFunctions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) HasFunctions() bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HasFunctions determines if all locations in this profile have symbolized function information.&lt;/p&gt;
&lt;h4 id=&#34;profile-mergehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol441-httpspkggodevinternalprofilego1201profilemerge&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=441&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Merge&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Merge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Merge(pb *Profile, r float64) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Merge adds profile p adjusted by ratio r into profile p. Profiles must be compatible (same Type and SampleType). TODO(rsilvera): consider normalizing the profiles based on the total samples collected.&lt;/p&gt;
&lt;h4 id=&#34;profile-normalizehttpscsopensourcegooglegogogo1201srcinternalprofilemergegol73-httpspkggodevinternalprofilego1201profilenormalize&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/merge.go;l=73&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Normalize&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Normalize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Normalize(pb *Profile) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Normalize normalizes the source profile by multiplying each value in profile by the ratio of the sum of the base profile&amp;rsquo;s values of that sample type to the sum of the source profile&amp;rsquo;s value of that sample type.&lt;/p&gt;
&lt;h4 id=&#34;profile-parsememorymaphttpscsopensourcegooglegogogo1201srcinternalprofilelegacy_profilegol1024-httpspkggodevinternalprofilego1201profileparsememorymap&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/legacy_profile.go;l=1024&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ParseMemoryMap&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.ParseMemoryMap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) ParseMemoryMap(rd io.Reader) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ParseMemoryMap parses a memory map in the format of /proc/self/maps, and overrides the mappings in the current profile. It renumbers the samples and locations in the profile correspondingly.&lt;/p&gt;
&lt;h4 id=&#34;profile-prunehttpscsopensourcegooglegogogo1201srcinternalprofileprunegol17-httpspkggodevinternalprofilego1201profileprune&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/prune.go;l=17&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prune&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Prune&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Prune(dropRx, keepRx *regexp.Regexp)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Prune removes all nodes beneath a node matching dropRx, and not matching keepRx. If the root node of a Sample matches, the sample will have an empty stack.&lt;/p&gt;
&lt;h4 id=&#34;profile-removeuninterestinghttpscsopensourcegooglegogogo1201srcinternalprofileprunegol81-httpspkggodevinternalprofilego1201profileremoveuninteresting&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/prune.go;l=81&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RemoveUninteresting&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.RemoveUninteresting&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) RemoveUninteresting() error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;RemoveUninteresting prunes and elides profiles using built-in tables of uninteresting function names.&lt;/p&gt;
&lt;h4 id=&#34;profile-scalehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol579-httpspkggodevinternalprofilego1201profilescale&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=579&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scale&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Scale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Scale(ratio float64)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Scale multiplies all sample values in a profile by a constant.&lt;/p&gt;
&lt;h4 id=&#34;profile-scalenhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol591-httpspkggodevinternalprofilego1201profilescalen&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=591&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ScaleN&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.ScaleN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) ScaleN(ratios []float64) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ScaleN multiplies each sample values in a sample by a different amount.&lt;/p&gt;
&lt;h4 id=&#34;profile-stringhttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol337-httpspkggodevinternalprofilego1201profilestring&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=337&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;String&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.String&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) String() string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Print dumps a text representation of a profile. Intended mainly for debugging purposes.&lt;/p&gt;
&lt;h4 id=&#34;profile-writehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol219-httpspkggodevinternalprofilego1201profilewrite&#34;&gt;(*Profile) &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=219&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Profile.Write&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func (p *Profile) Write(w io.Writer) error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Write writes the profile as a gzip-compressed marshaled protobuf.&lt;/p&gt;
&lt;h3 id=&#34;type-samplehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol55-httpspkggodevinternalprofilego1201sample&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=55&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sample&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#Sample&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type Sample struct {
	Location []*Location
	Value    []int64
	Label    map[string][]string
	NumLabel map[string][]int64
	NumUnit  map[string][]string
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Sample corresponds to Profile.Sample&lt;/p&gt;
&lt;h3 id=&#34;type-tagmatchhttpscsopensourcegooglegogogo1201srcinternalprofilefiltergol114-httpspkggodevinternalprofilego1201tagmatch&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/filter.go;l=114&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TagMatch&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#TagMatch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type TagMatch func(key, val string, nval int64) bool
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TagMatch selects tags for filtering&lt;/p&gt;
&lt;h3 id=&#34;type-valuetypehttpscsopensourcegooglegogogo1201srcinternalprofileprofilegol46-httpspkggodevinternalprofilego1201valuetype&#34;&gt;type &lt;a href=&#34;https://cs.opensource.google/go/go/&amp;#43;/go1.20.1:src/internal/profile/profile.go;l=46&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ValueType&lt;/a&gt; &lt;a href=&#34;https://pkg.go.dev/internal/profile@go1.20.1#ValueType&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;type ValueType struct {
	Type string // cpu, wall, inuse_space, etc
	Unit string // seconds, nanoseconds, bytes, etc
	// contains filtered or unexported fields
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ValueType corresponds to Profile.ValueType&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/race/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/race/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/reflectlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/reflectlite/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/safefilepath/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/safefilepath/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/saferio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/saferio/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/singleflight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/singleflight/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/syscall_execenv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/syscall_execenv/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/syscall_unix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/syscall_unix/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/syscall_windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/syscall_windows/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/syscall_windows_registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/syscall_windows_registry/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://ngd.cn/docs/stdLib/internal/syscall_windows_sysdll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ngd.cn/docs/stdLib/internal/syscall_windows_sysdll/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
