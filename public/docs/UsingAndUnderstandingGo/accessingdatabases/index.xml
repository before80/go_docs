<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go文档集 – 访问数据库</title>
    <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/</link>
    <description>Recent content in 访问数据库 on go文档集</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 May 2023 15:03:14 +0800</lastBuildDate>
    
	  <atom:link href="http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 访问关系型数据库</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/AccessingRelationalDatabases/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/AccessingRelationalDatabases/</guid>
      <description>
        
        
        &lt;h1 id=&#34;accessing-relational-databases---访问关系型数据库&#34;&gt;Accessing relational databases - 访问关系型数据库&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	使用 Go，您可以将各种数据库和数据访问方法纳入您的应用程序中。本节的主题描述了如何使用标准库的&lt;a href=&#34;https://pkg.go.dev/database/sql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;database/sql&lt;/a&gt;包来访问关系型数据库。&lt;/p&gt;
&lt;p&gt;​	关于Go的数据访问的介绍性教程，请看 &lt;a href=&#34;../../../GettingStarted/TutorialAccessingARelationalDatabase&#34;&gt;Tutorial: Accessing a relational database&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	Go 也支持其他数据访问技术，包括用于更高级别的访问关系型数据库的 ORM 库，以及非关系型 NoSQL 数据存储。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对象-关系映射（ORM）库（Object-relational mapping (ORM) libraries）&lt;/strong&gt;。虽然&lt;code&gt;database/sql&lt;/code&gt; 包包括用于低级数据访问逻辑的函数，但您也可以使用 Go 来访问更高抽象级别的数据存储。关于Go的两个流行的对象-关系映射（ORM）库的更多信息，请参见&lt;a href=&#34;https://gorm.io/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GORM&lt;/a&gt;和&lt;a href=&#34;https://entgo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ent&lt;/a&gt; (&lt;a href=&#34;https://pkg.go.dev/entgo.io/ent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;package reference&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NoSQL 数据存储.&lt;/strong&gt; Go 社区已经为大多数 NoSQL 数据存储开发了驱动程序，包括 &lt;a href=&#34;https://docs.mongodb.com/drivers/go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB&lt;/a&gt;和 &lt;a href=&#34;https://docs.couchbase.com/go-sdk/current/hello-world/overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Couchbase&lt;/a&gt;。您可以搜索&lt;a href=&#34;https://pkg.go.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pkg.go.dev&lt;/a&gt; 获取更多信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supported-database-management-systems-支持的数据库管理系统&#34;&gt;Supported database management systems 支持的数据库管理系统&lt;/h3&gt;
&lt;p&gt;​	Go 支持所有最常见的关系型数据库管理系统，包括 &lt;code&gt;MySQL&lt;/code&gt;、&lt;code&gt;Oracle&lt;/code&gt;、&lt;code&gt;Postgres&lt;/code&gt;、&lt;code&gt;SQL Server&lt;/code&gt;、&lt;code&gt;SQLite&lt;/code&gt; 等。&lt;/p&gt;
&lt;p&gt;​	你可以在 &lt;a href=&#34;https://github.com/golang/go/wiki/SQLDrivers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQLDrivers&lt;/a&gt;页面找到完整的驱动列表。&lt;/p&gt;
&lt;h3 id=&#34;functions-to-execute-queries-or-make-database-changes-执行查询或更改数据库的函数&#34;&gt;Functions to execute queries or make database changes 执行查询或更改数据库的函数&lt;/h3&gt;
&lt;p&gt;​	&lt;code&gt;database/sql&lt;/code&gt;包包含专门为你正在执行的数据库操作设计的函数。例如，虽然你可以使用&lt;code&gt;Query&lt;/code&gt;或&lt;code&gt;QueryRow&lt;/code&gt;来执行查询，但&lt;code&gt;QueryRow&lt;/code&gt;是为只需要一行的情况而设计的，省去了返回只包括一行记录的&lt;code&gt;sql.Rows&lt;/code&gt;的开销。你可以使用&lt;code&gt;Exec&lt;/code&gt;函数用SQL语句对数据库进行修改，如&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, 或&lt;code&gt;DELETE&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;​	更多内容，请参见以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../ExecutingSQLStatementsThatDoNotReturnData&#34;&gt;Executing SQL statements that don’t return data （执行不返回数据的SQL语句）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../QueryingForData&#34;&gt;Querying for data （查询数据）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;transactions-事务&#34;&gt;Transactions 事务&lt;/h3&gt;
&lt;p&gt;​	通过&lt;code&gt;sql.Tx&lt;/code&gt;，您可以编写代码来执行事务中的数据库操作。在一个事务中，多个操作可以一起执行，并以最后的提交（commit）来结束，以便在一个原子步骤中应用所有的更改，或者以回滚（rollback）来丢弃（discard ）它们。&lt;/p&gt;
&lt;p&gt;​	关于事务的更多信息，请参见&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;query-cancellation-查询的取消&#34;&gt;Query cancellation 查询的取消&lt;/h3&gt;
&lt;p&gt;​	当你希望能够取消一个数据库操作时，你可以使用&lt;code&gt;context.Context&lt;/code&gt;，例如，当客户端的连接关闭或操作运行的时间超过期望时。&lt;/p&gt;
&lt;p&gt;​	对于任何数据库操作，你可以使用一个&lt;code&gt;database/sql&lt;/code&gt;包函数，该函数将&lt;code&gt;Context&lt;/code&gt;作为一个实参。使用&lt;code&gt;Context&lt;/code&gt;，你可以为操作指定一个超时或最后期限。你还可以使用 &lt;code&gt;Context&lt;/code&gt; 将取消请求通过应用程序传播到执行 SQL 语句的函数，确保在不再需要资源时释放资源。&lt;/p&gt;
&lt;p&gt;​	更多信息请参见&lt;a href=&#34;../CancelingIn-progressDatabaseOperations&#34;&gt;Canceling in-progress operations （取消正在进行的操作）&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;managed-connection-pool-管理连接池&#34;&gt;Managed connection pool 管理连接池&lt;/h3&gt;
&lt;p&gt;​	当你使用&lt;code&gt;sql.DB&lt;/code&gt;数据库句柄时，你正在与一个内置的连接池连接，该连接池根据你代码的需要创建和处置连接。通过&lt;code&gt;sql.DB&lt;/code&gt;的句柄是用Go进行数据库访问的最常见方式。更多信息请参见&lt;a href=&#34;../OpeningADatabaseHandle&#34;&gt;Opening a database handle （打开数据库句柄）&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;database/sql&lt;/code&gt;包为你管理连接池。然而，对于更高级的需求，可以按照&lt;a href=&#34;https://go.dev/doc/database/manage-connections#connection_pool_properties&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting connection pool properties （设置连接池属性）&lt;/a&gt;中的说明设置连接池属性。&lt;/p&gt;
&lt;p&gt;​	对于那些需要单一保留连接的操作，&lt;code&gt;database/sql&lt;/code&gt;包提供了&lt;a href=&#34;https://pkg.go.dev/database/sql#Conn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Conn&lt;/a&gt;。当使用&lt;code&gt;sql.Tx&lt;/code&gt;的事务是一个糟糕的选择时，&lt;code&gt;Conn&lt;/code&gt;就特别有用。&lt;/p&gt;
&lt;p&gt;​	例如，你的代码可能需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;DDL&lt;/code&gt;进行模式更改，包括包含其自身事务语义的逻辑。将&lt;code&gt;sql&lt;/code&gt;包的事务函数与SQL事务语句混合在一起是一种不好的做法，正如在&lt;a href=&#34;https://go.dev/doc/database/execute-transactions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 中所描述的那样。&lt;/li&gt;
&lt;li&gt;执行创建临时表的查询锁定操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	更多内容请参见 &lt;a href=&#34;../ManagingConnections#using-dedicated-connections&#34;&gt;Using dedicated connections （使用专用连接）&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 打开一个数据库句柄</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/OpeningADatabaseHandle/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/OpeningADatabaseHandle/</guid>
      <description>
        
        
        &lt;h1 id=&#34;opening-a-database-handle---打开一个数据库句柄&#34;&gt;Opening a database handle - 打开一个数据库句柄&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/open-handle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/open-handle&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	&lt;a href=&#34;https://pkg.go.dev/database/sql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;database/sql&lt;/a&gt;包通过减少你需要的管理连接来简化数据库访问。与许多数据访问API不同，使用&lt;code&gt;database/sql&lt;/code&gt;，你不需要明确地打开一个连接，进行工作，然后关闭连接。相反，你的代码会打开一个代表连接池的数据库句柄，然后用这个句柄执行数据访问操作，仅在需要释放资源（比如那些被检索的行或预处理语句所持有的资源）时才调用&lt;code&gt;Close&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;​	换句话说，它是由&lt;a href=&#34;https://pkg.go.dev/database/sql#DB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.DB&lt;/a&gt;表示的数据库句柄，代表你的代码来处理连接、打开和关闭连接。当你的代码使用句柄来执行数据库操作时，这些操作对数据库有并发的访问。更多信息请参见&lt;a href=&#34;../ManagingConnections&#34;&gt;Managing connections （管理连接）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;注意：你也可以保留一个数据库连接。更多信息，请参见 &lt;a href=&#34;../ManagingConnections#using-dedicated-connections&#34;&gt;Using dedicated connections （使用专用连接）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	除了&lt;code&gt;database/sql&lt;/code&gt;包中的API之外，Go社区还为所有最常见的（以及许多不常见的）数据库管理系统（DBMSes）开发了驱动程序。&lt;/p&gt;
&lt;p&gt;当打开一个数据库句柄时，请遵循以下高级步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;找到一个驱动程序。&lt;/p&gt;
&lt;p&gt;驱动程序会在你的Go代码和数据库之间转换（translates）请求和响应。更多信息，请参见 &lt;a href=&#34;#locating-and-importing-a-database-driver&#34;&gt;Locating and importing a database driver （找到并导入数据库驱动程序）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开一个数据库句柄。&lt;/p&gt;
&lt;p&gt;在你导入驱动程序后，你可以为特定的数据库打开一个句柄。更多信息，请参见&lt;a href=&#34;#opening-a-database-handle&#34;&gt;Opening a database handle （打开一个数据库句柄）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认连接。&lt;/p&gt;
&lt;p&gt;一旦你打开了一个数据库句柄，你的代码就可以检查是否有连接可用。更多信息，请参见&lt;a href=&#34;#confirming-a-connection&#34;&gt;Confirming a connection （确认连接）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	你的代码通常不会明确地打开或关闭数据库连接——那是由数据库句柄完成的。&lt;strong&gt;然而，你的代码应该释放它沿途获得的资源&lt;/strong&gt;，例如包含查询结果的&lt;code&gt;sql.Rows&lt;/code&gt;。更多信息请参见&lt;a href=&#34;#freeing-resources&#34;&gt;Freeing resources（释放资源）&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;locating-and-importing-a-database-driver-找到并导入数据库驱动程序&#34;&gt;Locating and importing a database driver 找到并导入数据库驱动程序&lt;/h3&gt;
&lt;p&gt;​	你需要一个支持你所使用的数据库管理系统的数据库驱动程序。要为你的数据库找到一个驱动，请看&lt;a href=&#34;https://github.com/golang/go/wiki/SQLDrivers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQLDrivers&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	为了使你的代码能够使用该驱动程序，你可以像导入其他Go包一样导入它。下面是一个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;github.com/go-sql-driver/mysql&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	注意，如果你没有直接从驱动包中调用任何函数——比如它被&lt;code&gt;sql&lt;/code&gt;包隐式使用——你需要使用空白导入，它在导入路径前加了一个下划线：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;github.com/go-sql-driver/mysql&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：作为一个最佳实践，请避免使用数据库驱动程序自己的API进行数据库操作。相反，使用`database/sql`包中的函数。这将有助于保持你的代码与DBMS的松耦合，使你在需要时更容易切换到不同的DBMS。
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;opening-a-database-handle-打开一个数据库句柄&#34;&gt;Opening a database handle 打开一个数据库句柄&lt;/h3&gt;
&lt;p&gt;​	&lt;code&gt;sql.DB&lt;/code&gt;数据库句柄提供了从数据库读取和写入数据库的能力，无论是单独的还是在一个事务中。&lt;/p&gt;
&lt;p&gt;​	你可以通过调用&lt;code&gt;sql.Open&lt;/code&gt;（它接收一个连接字符串）或者&lt;code&gt;sql.OpenDB&lt;/code&gt;（它接收一个&lt;code&gt;driver.Connector&lt;/code&gt;）来获得一个数据库句柄。两者都返回一个指向&lt;a href=&#34;https://pkg.go.dev/database/sql#DB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.DB&lt;/a&gt;的指针。&lt;/p&gt;
&lt;p&gt;注意：请确保你的数据库凭证不在你的Go源代码中。更多信息请参见&lt;a href=&#34;#storing-database-credentials&#34;&gt;Storing database credentials （存储数据库凭证）&lt;/a&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;opening-with-a-connection-string-用连接字符串打开&#34;&gt;Opening with a connection string 用连接字符串打开&lt;/h4&gt;
&lt;p&gt;​	当你想使用连接字符串进行连接时，请使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Open&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Open&lt;/a&gt;函数。字符串的格式将根据你使用的驱动程序而有所不同。&lt;/p&gt;
&lt;p&gt;下面是一个关于MySQL的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;username:password@tcp(127.0.0.1:3306)/jazzrecords&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	然而，你可能会发现，以更结构化的方式捕获连接属性会使你的代码更具可读性。这些细节会因驱动而异。&lt;/p&gt;
&lt;p&gt;​	例如，你可以把前面的例子换成下面的例子，它使用MySQL驱动的&lt;a href=&#34;https://pkg.go.dev/github.com/go-sql-driver/mysql#Config&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Config&lt;/a&gt;来指定属性，并使用&lt;a href=&#34;https://pkg.go.dev/github.com/go-sql-driver/mysql#Config.FormatDSN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FormatDSN&lt;/a&gt;方法来构建一个连接字符串。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Specify connection properties.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;cfg&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Config&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;User&lt;/span&gt;:   &lt;span style=&#34;color:#e06c75&#34;&gt;username&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Passwd&lt;/span&gt;: &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Net&lt;/span&gt;:    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Addr&lt;/span&gt;:   &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;127.0.0.1:3306&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;DBName&lt;/span&gt;: &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;jazzrecords&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Get a database handle.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;cfg&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;FormatDSN&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;opening-with-a-connector-用一个连接器打开&#34;&gt;Opening with a Connector 用一个连接器打开&lt;/h4&gt;
&lt;p&gt;​	当你想利用连接字符串中没有的特定驱动程序的连接特性时，请使用&lt;a href=&#34;https://pkg.go.dev/database/sql#OpenDB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.OpenDB&lt;/a&gt;函数。每个驱动都支持自己的连接属性集，通常提供了定制特定于DBMS的连接请求的方式。&lt;/p&gt;
&lt;p&gt;​	将前面的&lt;code&gt;sql.Open&lt;/code&gt;例子改成使用&lt;code&gt;sql.OpenDB&lt;/code&gt;，你可以用下面的代码创建一个句柄：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Specify connection properties.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;cfg&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Config&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;User&lt;/span&gt;:   &lt;span style=&#34;color:#e06c75&#34;&gt;username&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Passwd&lt;/span&gt;: &lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Net&lt;/span&gt;:    &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;Addr&lt;/span&gt;:   &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;127.0.0.1:3306&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;DBName&lt;/span&gt;: &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;jazzrecords&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Get a driver-specific connector.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;connector&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;mysql&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;NewConnector&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;cfg&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Get a database handle.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;OpenDB&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;connector&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;handling-errors-处理错误&#34;&gt;Handling errors 处理错误&lt;/h4&gt;
&lt;p&gt;​	你的代码应该检查是否在尝试创建句柄时出错，比如用&lt;code&gt;sql.Open&lt;/code&gt;。这不会是一个连接错误。相反，如果&lt;code&gt;sql.Open&lt;/code&gt;无法初始化句柄，你会得到一个错误。这可能发生，例如，如果它无法解析你指定的&lt;code&gt;DSN&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;confirming-a-connection-确认一个连接&#34;&gt;Confirming a connection 确认一个连接&lt;/h3&gt;
&lt;p&gt;​	当你打开一个数据库句柄时，&lt;code&gt;sql&lt;/code&gt;包可能不会立即自己创建一个新的数据库连接。相反，它可能会在你的代码需要它时创建连接。如果你不会马上使用数据库，并且想确认连接可以被建立，可以调用&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Ping&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ping&lt;/a&gt;或&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.PingContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PingContext&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面的例子中的代码对数据库进行ping，以确认连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;connString&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Confirm a successful connection.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Ping&lt;/span&gt;(); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;storing-database-credentials-存储数据库凭证&#34;&gt;Storing database credentials 存储数据库凭证&lt;/h3&gt;
&lt;p&gt;​	避免在你的Go源代码中存储数据库凭证（credentials ），这可能会将你的数据库内容暴露给其他人。相反，要想办法将其存储在代码之外的位置，但对代码是可用的。例如，考虑一个保密应用程序，该应用程序存储凭据并提供一个 API，您的代码可以使用该 API 检索凭据，以便对 DBMS 进行身份验证。&lt;/p&gt;
&lt;p&gt;​	一种流行的方法是在程序启动前将秘密存储在环境中，可能是从秘密管理器中加载，然后你的 Go 程序可以使用 &lt;a href=&#34;https://pkg.go.dev/os#Getenv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;os.Getenv&lt;/a&gt; 读取这些秘密：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;username&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;DB_USER&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;DB_PASS&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	这种方法还允许你为本地测试自己设置环境变量。&lt;/p&gt;
&lt;h3 id=&#34;freeing-resources-释放资源&#34;&gt;Freeing resources 释放资源&lt;/h3&gt;
&lt;p&gt;​	虽然您没有显式地管理或关闭&lt;code&gt;database/sql&lt;/code&gt;包提供连接，但你的代码应该在不再需要时释放它所获得的资源。这些可能包括由表示从查询返回的数据的&lt;code&gt;sql.Rows&lt;/code&gt;或代表预处理语句的&lt;code&gt;sql.Stmt&lt;/code&gt;持有的资源。&lt;/p&gt;
&lt;p&gt;​	通常，你通过推迟对&lt;code&gt;Close&lt;/code&gt;函数的调用来关闭资源，以便在外层函数退出之前释放资源。&lt;/p&gt;
&lt;p&gt;​	在下面的例子中，代码延迟&lt;code&gt;Close&lt;/code&gt;，以释放由&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Rows&lt;/a&gt;持有的资源。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM album WHERE artist = ?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;artist&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Loop through returned rows.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 执行不返回数据的SQL语句</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ExecutingSQLStatementsThatDoNotReturnData/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ExecutingSQLStatementsThatDoNotReturnData/</guid>
      <description>
        
        
        &lt;h1 id=&#34;executing-sql-statements-that-dont-return-data---执行不返回数据的sql语句&#34;&gt;Executing SQL statements that don&amp;rsquo;t return data - 执行不返回数据的SQL语句&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/change-data&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/change-data&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	当你执行不返回数据的数据库操作时，请使用&lt;code&gt;database/sql&lt;/code&gt;包的&lt;code&gt;Exec&lt;/code&gt;或&lt;code&gt;ExecContext&lt;/code&gt;方法。以这种方式执行的SQL语句包括&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, 和&lt;code&gt;UPDATE&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;​	当你的查询可能返回行时，请改为使用&lt;code&gt;Query&lt;/code&gt;或&lt;code&gt;QueryContext&lt;/code&gt;方法。更多信息请参见 &lt;a href=&#34;../QueryingForData&#34;&gt;Querying a database （查询数据库）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;ExecContext&lt;/code&gt;方法的工作原理与&lt;code&gt;Exec&lt;/code&gt;方法相同，但有一个额外的&lt;code&gt;context.Context&lt;/code&gt;参数，如 &lt;a href=&#34;../CancelingIn-progressDatabaseOperations&#34;&gt;Canceling in-progress operations （取消正在进行的操作）&lt;/a&gt; 中所述。&lt;/p&gt;
&lt;p&gt;​	下面的例子中的代码使用&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Exec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.Exec&lt;/a&gt;来执行一条语句，将一个新的记录专辑添加到一个&lt;code&gt;album&lt;/code&gt;表中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;AddAlbum&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;) (&lt;span style=&#34;color:#e5c07b&#34;&gt;int64&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;result&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Exec&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;INSERT INTO album (title, artist) VALUES (?, ?)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Title&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Artist&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;AddAlbum: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Get the new album&amp;#39;s generated ID for the client.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;LastInsertId&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;AddAlbum: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Return the new album&amp;#39;s ID.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	&lt;code&gt;DB.Exec&lt;/code&gt;返回值：一个&lt;a href=&#34;https://pkg.go.dev/database/sql#Result&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Result&lt;/a&gt;和一个错误。当错误为&lt;code&gt;nil&lt;/code&gt;时，你可以使用&lt;code&gt;Result&lt;/code&gt;来获得最后插入的项目的ID（如在例子中）或检索受操作影响的行数。&lt;/p&gt;
&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：预处理语句中的参数占位符根据你所使用的`DBMS`和驱动而不同。例如，`Postgres`的[pq driver](https://pkg.go.dev/github.com/lib/pq)需要一个类似于`$1`的占位符，而不是`?`.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	如果你的代码将重复执行相同的SQL语句，考虑使用一个&lt;code&gt;sql.Stmt&lt;/code&gt;来从SQL语句中创建一个可重复使用的预处理语句。更多信息请参见 &lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements（使用预处理语句）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：不要使用字符串格式化函数，如`fmt.Sprintf`来组合一个SQL语句！ 你可能会引入一个[SQL注入的风险](https://go.dev/doc/database/sql-injection)。更多信息，请参见[Avoiding SQL injection risk（避免SQL注入风险）](../AvoidingSQLInjectionRisk)。
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;functions-for-executing-sql-statements-that-dont-return-rows-用于执行不返回行的sql语句的函数&#34;&gt;Functions for executing SQL statements that don’t return rows 用于执行不返回行的SQL语句的函数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function 函数&lt;/th&gt;
&lt;th&gt;Description 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DB.Exec&lt;/code&gt; &lt;code&gt;DB.ExecContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;单独执行一条 SQL 语句。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tx.Exec&lt;/code&gt; &lt;code&gt;Tx.ExecContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在较大的事务中执行 SQL 语句。有关详细信息，请参阅请参阅&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Stmt.Exec&lt;/code&gt; &lt;code&gt;Stmt.ExecContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;执行一个预处理SQL语句。更多信息，请参见 &lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements（使用预处理语句）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Conn.ExecContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于保留连接。更多信息，请参见&lt;a href=&#34;../ManagingConnections&#34;&gt;Managing connections（ 管理连接）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 查询数据</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/QueryingForData/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/QueryingForData/</guid>
      <description>
        
        
        &lt;h1 id=&#34;querying-for-data---查询数据&#34;&gt;Querying for data - 查询数据&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/querying&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/querying&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	当执行一个返回数据的SQL语句时，使用&lt;code&gt;database/sql&lt;/code&gt;包中提供的&lt;code&gt;Query&lt;/code&gt;方法之一。每个方法都会返回一个行（&lt;code&gt;Row&lt;/code&gt;）或多个行（&lt;code&gt;Rows&lt;/code&gt;），你可以使用&lt;code&gt;Scan&lt;/code&gt;方法将其数据复制到变量。你会使用这些方法，例如，执行&lt;code&gt;SELECT&lt;/code&gt;语句。&lt;/p&gt;
&lt;p&gt;​	当执行一个不返回数据的语句时，你可以改用&lt;code&gt;Exec&lt;/code&gt;或&lt;code&gt;ExecContext&lt;/code&gt;方法。更多信息请参见 &lt;a href=&#34;../ExecutingSQLStatementsThatDoNotReturnData&#34;&gt;Executing statements that don’t return data（执行不返回数据的语句）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;database/sql&lt;/code&gt;包提供了两种执行结果查询的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查询单行&lt;/strong&gt;  —— &lt;code&gt;QueryRow&lt;/code&gt; 最多只能从数据库中返回一个单行。更多信息请参见 &lt;a href=&#34;#querying-for-a-single-row&#34;&gt;Querying for a single row （查询单行）&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;查询多行 —— &lt;code&gt;Query&lt;/code&gt; 将所有匹配的行作为一个&lt;code&gt;Rows&lt;/code&gt;结构体（你的代码可以循环遍历）返回，。更多信息，请参见 &lt;a href=&#34;#querying-for-multiple-rows&#34;&gt;Querying for multiple rows 查询多行&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	如果你的代码将重复执行相同的SQL语句，请考虑使用预处理语句。更多信息，请参见 &lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements （使用预处理语句）&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：不要使用字符串格式化函数，如`fmt.Sprintf`来组合一个SQL语句！你可能会引入一个SQL注入的风险。更多信息，请参见避免[SQL注入风险](https://go.dev/doc/database/sql-injection)。
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;querying-for-a-single-row-查询单行&#34;&gt;Querying for a single row 查询单行&lt;/h3&gt;
&lt;p&gt;​	&lt;code&gt;QueryRow&lt;/code&gt;最多只能检索一条数据库记录，例如当你想通过一个唯一的ID来查询数据。如果查询返回多条记录，&lt;code&gt;Scan&lt;/code&gt;方法会丢弃除第一条以外的所有记录。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;QueryRowContext&lt;/code&gt;的工作方式与&lt;code&gt;QueryRow&lt;/code&gt;类似，但有一个&lt;code&gt;context.Context&lt;/code&gt;实参。更多信息请参见 &lt;a href=&#34;../CancelingIn-progressDatabaseOperations&#34;&gt;Canceling in-progress operations（取消正在进行的操作）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	下面的例子使用一个查询来找出是否有足够的库存来支持购买。如果有足够的库存，该SQL语句返回&lt;code&gt;true&lt;/code&gt;，如果没有则返回&lt;code&gt;false&lt;/code&gt;。&lt;a href=&#34;https://pkg.go.dev/database/sql#Row.Scan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Row.Scan&lt;/a&gt;通过一个指针将布尔型的返回值复制到&lt;code&gt;enough&lt;/code&gt;变量中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;canPurchase&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#e5c07b&#34;&gt;bool&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Query for a value based on a single row.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryRow&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT (quantity &amp;gt;= ?) from album where id = ?&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;).&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Scan&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt;); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;ErrNoRows&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;canPurchase %d: unknown album&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;canPurchase %d: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意：准备预处理语句中的参数占位符根据你所使用的&lt;code&gt;DBMS&lt;/code&gt;和驱动而不同。例如，&lt;code&gt;Postgres&lt;/code&gt;的&lt;a href=&#34;https://pkg.go.dev/github.com/lib/pq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pq driver&lt;/a&gt;需要一个类似于&lt;code&gt;$1&lt;/code&gt;的占位符，而不是&lt;code&gt;?&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;handling-errors-处理错误&#34;&gt;Handling errors 处理错误&lt;/h4&gt;
&lt;p&gt;​	&lt;code&gt;QueryRow&lt;/code&gt;本身不返回错误。相反，&lt;code&gt;Scan&lt;/code&gt;报告来自组合查询和扫描的任何错误。当查询没有找到记录时，它返回&lt;a href=&#34;https://pkg.go.dev/database/sql#ErrNoRows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.ErrNoRows&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;functions-for-returning-a-single-row-用于返回单行的函数&#34;&gt;Functions for returning a single row 用于返回单行的函数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function 函数&lt;/th&gt;
&lt;th&gt;Description &lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DB.QueryRow&lt;/code&gt; &lt;code&gt;DB.QueryRowContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;单独运行一个单行查询。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tx.QueryRow&lt;/code&gt; &lt;code&gt;Tx.QueryRowContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在较大的事务中运行一个单行查询。更多信息，请参阅&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Stmt.QueryRow&lt;/code&gt; &lt;code&gt;Stmt.QueryRowContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用预处理语句运行一个单行查询。更多信息，请参见 &lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements（使用预处理语句）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Conn.QueryRowContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于保留连接。更多信息，请参见&lt;a href=&#34;../ManagingConnections&#34;&gt;Managing connections（ 管理连接）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;querying-for-multiple-rows-查询多行&#34;&gt;Querying for multiple rows 查询多行&lt;/h3&gt;
&lt;p&gt;​	你可以使用&lt;code&gt;Query&lt;/code&gt;或&lt;code&gt;QueryContext&lt;/code&gt;查询多条记录，它们返回一个代表查询结果的&lt;code&gt;Rows&lt;/code&gt;。你的代码使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.Next&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rows.Next&lt;/a&gt;对返回的行进行迭代。每次迭代都会调用&lt;code&gt;Scan&lt;/code&gt;来将列值复制到变量中。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;QueryContext&lt;/code&gt;的工作方式与&lt;code&gt;Query&lt;/code&gt;类似，但有一个&lt;code&gt;context.Context&lt;/code&gt;实参。更多信息请参见 &lt;a href=&#34;../CancelingIn-progressDatabaseOperations&#34;&gt;Canceling in-progress operations （取消正在进行的操作）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	下面的例子执行了一个查询，返回指定艺术家的专辑。这些专辑被返回到一个&lt;code&gt;sql.Rows&lt;/code&gt;中。该代码使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.Scan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rows.Scan&lt;/a&gt;将列值复制到由指针表示的变量中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;albumsByArtist&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;artist&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;string&lt;/span&gt;) ([]&lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM album WHERE artist = ?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;artist&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// An album slice to hold data from returned rows.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt; []&lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Loop through rows, using Scan to assign column data to struct fields.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Next&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Scan&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;ID&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Title&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Artist&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Price&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;alb&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Quantity&lt;/span&gt;); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt; = &lt;span style=&#34;color:#e5c07b&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Err&lt;/span&gt;(); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;albums&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意对[rows.Close](https://pkg.go.dev/database/sql#Rows.Close)的延迟调用。无论函数如何返回，这都会释放rows所持有的任何资源。循环处理所有的行也会隐式地关闭它，但最好使用`defer`来确保无论如何都会关闭`rows`。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：预处理语句中的参数占位符根据你所使用的`DBMS`和驱动而不同。例如，`Postgres`的[pq driver](https://pkg.go.dev/github.com/lib/pq)需要一个类似于`$1`的占位符，而不是`?`。
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;handling-errors-处理错误-1&#34;&gt;Handling errors 处理错误&lt;/h4&gt;
&lt;p&gt;Be sure to check for an error from &lt;code&gt;sql.Rows&lt;/code&gt; after looping over query results. If the query failed, this is how your code finds out.&lt;/p&gt;
&lt;p&gt;​	在循环查询结果后，一定要从&lt;code&gt;sql.Rows&lt;/code&gt;中检查是否有错误。如果查询失败了，代码就是这样查找的。&lt;/p&gt;
&lt;h4 id=&#34;functions-for-returning-multiple-rows-返回多行记录的函数&#34;&gt;Functions for returning multiple rows 返回多行记录的函数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function 函数&lt;/th&gt;
&lt;th&gt;Description 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DB.Query&lt;/code&gt; &lt;code&gt;DB.QueryContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;单独运行一个查询。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tx.Query&lt;/code&gt; &lt;code&gt;Tx.QueryContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在较大的事务中运行一个查询。更多信息，请参阅&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Stmt.Query&lt;/code&gt; &lt;code&gt;Stmt.QueryContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用预处理语句运行一个查询。更多信息，请参见&lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements（使用预处理语句）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Conn.QueryContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于保留连接。更多信息，请参见&lt;a href=&#34;../ManagingConnections&#34;&gt;Managing connections（ 管理连接）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;handling-nullable-column-values-处理可为null的列值&#34;&gt;Handling nullable column values 处理可为null的列值&lt;/h3&gt;
&lt;p&gt;​	&lt;code&gt;database/sql&lt;/code&gt;包提供了几种特殊的类型，当一个列的值可能为&lt;code&gt;null&lt;/code&gt;时，你可以作为&lt;code&gt;Scan&lt;/code&gt;函数的实参使用。每种类型都包括一个&lt;code&gt;Valid&lt;/code&gt;字段，用于报告值是否为非&lt;code&gt;null&lt;/code&gt;，如果是的话，还包括一个持有该值的字段。&lt;/p&gt;
&lt;p&gt;​	下面的例子中的代码查询了一个客户名称。如果名字的值是&lt;code&gt;null&lt;/code&gt;的，代码会替换另一个值在应用程序中使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;NullString&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryRow&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT name FROM customer WHERE id = ?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;).&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Scan&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Find customer name, using placeholder if not present.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;Valued Customer&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;s&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Valid&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;name&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;s&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在&lt;code&gt;sql&lt;/code&gt;包参考资料中可以看到更多关于每种类型的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullBool&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullBool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullFloat64&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullFloat64&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullInt32&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullInt32&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullInt64&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullInt64&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullString&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#NullTime&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NullTime&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;getting-data-from-columns-从列中获取数据&#34;&gt;Getting data from columns 从列中获取数据&lt;/h3&gt;
&lt;p&gt;​	在循环查询返回的行时，您可以使用&lt;code&gt;Scan&lt;/code&gt;将行的列值复制到Go值，如&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.Scan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rows.Scan&lt;/a&gt;参考中所述。&lt;/p&gt;
&lt;p&gt;​	所有驱动程序都支持一组基本的数据转换，例如将SQL &lt;code&gt;INT&lt;/code&gt;转换为Go &lt;code&gt;int&lt;/code&gt;。一些驱动程序扩展了这一转换集；详情请参见各个驱动程序的文档。&lt;/p&gt;
&lt;p&gt;​	正如你所期望的，&lt;code&gt;Scan&lt;/code&gt;将从列类型转换为类似的Go类型。例如，&lt;code&gt;Scan&lt;/code&gt;将从SQL &lt;code&gt;CHAR&lt;/code&gt;、&lt;code&gt;VARCHAR&lt;/code&gt;和&lt;code&gt;TEXT&lt;/code&gt;转换为Go &lt;code&gt;string&lt;/code&gt;。但是，&lt;code&gt;Scan&lt;/code&gt;也会执行转换为另一种适合列值的Go类型。例如，如果列是一个总是包含数字的&lt;code&gt;VARCHAR&lt;/code&gt;，你可以指定一个数值Go类型，比如&lt;code&gt;int&lt;/code&gt;，来接收这个值，&lt;code&gt;Scan&lt;/code&gt;将使用&lt;code&gt;strconv.Atoi&lt;/code&gt;对其进行转换。&lt;/p&gt;
&lt;p&gt;​	关于&lt;code&gt;Scan&lt;/code&gt;函数进行转换的更多细节，请参见&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.Scan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rows.Scan&lt;/a&gt;参考。&lt;/p&gt;
&lt;h3 id=&#34;handling-multiple-result-sets-处理多个结果集&#34;&gt;Handling multiple result sets 处理多个结果集&lt;/h3&gt;
&lt;p&gt;​	当你的数据库操作可能返回多个结果集时，你可以通过使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Rows.NextResultSet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rows.NextResultSet&lt;/a&gt;来检索这些结果。这可能很有用，例如，当你发送分别查询多个表的 SQL 时，为每个表返回一个结果集。&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;Rows.NextResultSet&lt;/code&gt;准备好下一个结果集，以便调用&lt;code&gt;Rows.Next&lt;/code&gt;检索下一个结果集的第一条记录。它返回一个布尔值，表明是否存在下一个结果集。&lt;/p&gt;
&lt;p&gt;​	下面的例子中的代码使用&lt;code&gt;DB.Query&lt;/code&gt;来执行两个SQL语句。第一个结果集来自过程中的第一个查询，检索&lt;code&gt;album&lt;/code&gt;表中的所有记录。下一个结果集是来自于第二个查询，从&lt;code&gt;song&lt;/code&gt;表中检索记录。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * from album; SELECT * from song;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Loop through the first result set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Next&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Handle result set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Advance to next result set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;NextResultSet&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Loop through the second result set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Next&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Handle second set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Check for any error in either result set.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Err&lt;/span&gt;(); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 使用预处理语句</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/UsingPreparedStatements/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/UsingPreparedStatements/</guid>
      <description>
        
        
        &lt;h1 id=&#34;using-prepared-statements---使用预处理语句&#34;&gt;Using prepared statements - 使用预处理语句&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/prepared-statements&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/prepared-statements&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	你可以为重复使用定义一个预处理语句。这可以避免每次代码执行数据库操作时&lt;code&gt;重新创建语句的开销&lt;/code&gt;，从而帮助代码更快地运行。&lt;/p&gt;
&lt;p&gt;注意：预处理语句中的参数占位符根据你所使用的&lt;code&gt;DBMS&lt;/code&gt;和驱动而不同。例如，&lt;code&gt;Postgres&lt;/code&gt;的&lt;a href=&#34;https://pkg.go.dev/github.com/lib/pq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pq driver&lt;/a&gt;需要一个像&lt;code&gt;$1&lt;/code&gt;这样的占位符，而不是&lt;code&gt;?&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;what-is-a-prepared-statement-什么是预处理语句&#34;&gt;What is a prepared statement? 什么是预处理语句？&lt;/h3&gt;
&lt;p&gt;​	预处理语句是由&lt;code&gt;DBMS&lt;/code&gt;解析并保存的SQL，通常包含占位符，但没有实际参数值。之后，可以用一组参数值来执行该语句。&lt;/p&gt;
&lt;h3 id=&#34;how-you-use-prepared-statements-你如何使用预处理语句&#34;&gt;How you use prepared statements 你如何使用预处理语句&lt;/h3&gt;
&lt;p&gt;​	当你希望重复执行相同的SQL时，你可以使用一个&lt;code&gt;sql.Stmt&lt;/code&gt;来提前准备SQL语句，然后根据需要执行它。&lt;/p&gt;
&lt;p&gt;​	下面的例子创建了一个预处理语句，从数据库中选择一个特定的相册。&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Prepare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.Prepare&lt;/a&gt;返回一个&lt;code&gt;sql.Stmt&lt;/code&gt;，代表一个给定的SQL文本的预处理语句。你可以将SQL语句的参数传递给&lt;code&gt;Stmt.Exec&lt;/code&gt;、&lt;code&gt;Stmt.QueryRow&lt;/code&gt;或&lt;code&gt;Stmt.Query&lt;/code&gt;来运行该语句。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// AlbumByID retrieves the specified album.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;AlbumByID&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Define a prepared statement. You&amp;#39;d typically define the statement
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// elsewhere and save it for use in functions such as this one.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;stmt&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Prepare&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM album WHERE id = ?&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;Album&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Execute the prepared statement, passing in an id value for the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// parameter whose placeholder is ?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;stmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryRow&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;).&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Scan&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;ID&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Title&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Artist&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Price&lt;/span&gt;, &lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Quantity&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;ErrNoRows&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#7f848e&#34;&gt;// Handle the case of no rows returned.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;album&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;prepared-statement-behavior-预处理语句的行为&#34;&gt;Prepared statement behavior 预处理语句的行为&lt;/h3&gt;
&lt;p&gt;​	一个准备好的&lt;a href=&#34;https://pkg.go.dev/database/sql#Stmt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Stmt&lt;/a&gt;提供了常用的&lt;code&gt;Exec&lt;/code&gt;、&lt;code&gt;QueryRow&lt;/code&gt;和&lt;code&gt;Query&lt;/code&gt;方法来调用其语句。关于使用这些方法的更多信息，请参阅&lt;a href=&#34;../QueryingForData&#34;&gt;Querying for data （查询数据）&lt;/a&gt; 和 &lt;a href=&#34;../ExecutingSQLStatementsThatDoNotReturnData&#34;&gt;Executing SQL statements that don’t return data（执行不返回数据的SQL语句）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	然而，由于一个&lt;code&gt;sql.Stmt&lt;/code&gt;已经代表了一个预设的SQL语句，它的&lt;code&gt;Exec&lt;/code&gt;、&lt;code&gt;QueryRow&lt;/code&gt;和&lt;code&gt;Query&lt;/code&gt;方法只接受与占位符对应的SQL参数值，而忽略了SQL文本。&lt;/p&gt;
&lt;p&gt;​	你可以用不同的方式定义一个新的&lt;code&gt;sql.Stmt&lt;/code&gt;，这取决于你将如何使用它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DB.Prepare&lt;/code&gt;和&lt;code&gt;DB.PrepareContext&lt;/code&gt;创建了一个预处理语句，该语句可以在事务外单独执行，就像&lt;code&gt;DB.Exec&lt;/code&gt;和&lt;code&gt;DB.Query&lt;/code&gt;一样。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tx.Prepare&lt;/code&gt;、&lt;code&gt;Tx.PrepareContext&lt;/code&gt;、&lt;code&gt;Tx.Stmt&lt;/code&gt;和&lt;code&gt;Tx.StmtContext&lt;/code&gt;创建一个预处理语句，以便在一个特定的事务中使用。&lt;code&gt;Prepare&lt;/code&gt;和&lt;code&gt;PrepareContext&lt;/code&gt;使用SQL文本来定义语句。&lt;code&gt;Stmt&lt;/code&gt;和&lt;code&gt;StmtContext&lt;/code&gt;使用&lt;code&gt;DB.Prepare&lt;/code&gt;或&lt;code&gt;DB.PrepareContext&lt;/code&gt;的结果。也就是说，它们将一个非事务用的&lt;code&gt;sql.Stmt&lt;/code&gt;转换为这个事务用的&lt;code&gt;sql.Stmt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Conn.PrepareContext&lt;/code&gt;从一个代表保留连接的&lt;code&gt;sql.Conn&lt;/code&gt;创建一个预处理语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	一定要记住，在代码使用语句完成时，调用&lt;code&gt;stmt.Close&lt;/code&gt;。这将释放任何可能与之相关的数据库资源（如底层连接）。对于只是一个函数中的局部变量的语句，&lt;code&gt;defer stmt.Close()&lt;/code&gt;就足够了。&lt;/p&gt;
&lt;h4 id=&#34;functions-for-creating-a-prepared-statement-创建预处理语句的函数&#34;&gt;Functions for creating a prepared statement 创建预处理语句的函数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function 函数&lt;/th&gt;
&lt;th&gt;Description 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DB.Prepare&lt;/code&gt; &lt;code&gt;DB.PrepareContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;准备独立执行的语句，或者使用 &lt;code&gt;Tx.Stmt&lt;/code&gt; 将其转换为事务内准备的语句。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Tx.Prepare&lt;/code&gt; &lt;code&gt;Tx.PrepareContext&lt;/code&gt; &lt;code&gt;Tx.Stmt&lt;/code&gt; &lt;code&gt;Tx.StmtContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;准备一个在特定事务中使用的语句。更多信息，请参阅&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Conn.PrepareContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于保留连接。更多信息，请参见&lt;a href=&#34;../ManagingConnections&#34;&gt;Managing connections（ 管理连接）&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 执行事务</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ExecutingTransactions/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ExecutingTransactions/</guid>
      <description>
        
        
        &lt;h1 id=&#34;executing-transactions---执行事务&#34;&gt;Executing transactions - 执行事务&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/execute-transactions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/execute-transactions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	你可以使用表示事务的&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Tx&lt;/a&gt;来执行数据库事务。除了表示特定于事务语义的&lt;code&gt;Commit&lt;/code&gt;和&lt;code&gt;Rollback&lt;/code&gt;方法之外，&lt;code&gt;sql.Tx&lt;/code&gt;还有所有用来执行普通数据库操作的方法。要获取&lt;code&gt;sql.Tx&lt;/code&gt;，可以调用&lt;code&gt;DB.Begin&lt;/code&gt;或&lt;code&gt;DB.BeginTx&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;​	一个&lt;a href=&#34;https://en.wikipedia.org/wiki/Database_transaction&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;数据库事务&lt;/a&gt;将多个操作作为更大目标的一部分进行分组。所有的操作都必须成功，或者都不能成功，在这两种情况下都要保持数据的完整性。通常，一个事务的工作流程包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开始事务。&lt;/li&gt;
&lt;li&gt;执行一系列的数据库操作。&lt;/li&gt;
&lt;li&gt;如果没有发生错误，提交事务以进行数据库更改。&lt;/li&gt;
&lt;li&gt;如果发生错误，回滚事务使数据库保持不变。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	&lt;code&gt;sql&lt;/code&gt;包提供了开始和结束事务的方法，以及执行中间的数据库操作的方法。这些方法与上述工作流程中的四个步骤相对应。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开始一个事务&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Begin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.Begin&lt;/a&gt;或&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.BeginTx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.BeginTx&lt;/a&gt;开始一个新的数据库事务，返回一个代表它的&lt;code&gt;sql.Tx&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行数据库操作。&lt;/p&gt;
&lt;p&gt;使用一个&lt;code&gt;sql.Tx&lt;/code&gt;，你可以在一系列使用单一连接的操作中查询或更新数据库。为了支持这一点，&lt;code&gt;Tx&lt;/code&gt;导出了以下方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Exec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exec&lt;/a&gt; 和 &lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.ExecContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ExecContext&lt;/a&gt; ，用于通过SQL语句（如&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;UPDATE&lt;/code&gt;和&lt;code&gt;DELETE&lt;/code&gt;）进行数据库更改。&lt;/p&gt;
&lt;p&gt;更多信息请参见&lt;a href=&#34;../ExecutingSQLStatementsThatDoNotReturnData&#34;&gt;Executing statements that don’t return data（执行不返回数据的语句）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Query&lt;/a&gt;，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.QueryContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;QueryContext&lt;/a&gt;，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.QueryRow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;QueryRow&lt;/a&gt; ，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.QueryRowContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;QueryRowContext&lt;/a&gt; 用于返回行的操作。&lt;/p&gt;
&lt;p&gt;更多信息，请参见 &lt;a href=&#34;../QueryingForData&#34;&gt;Querying for data （查询数据）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Prepare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prepare&lt;/a&gt;，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.PrepareContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PrepareContext&lt;/a&gt;，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Stmt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stmt&lt;/a&gt;，&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.StmtContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;StmtContext&lt;/a&gt;用于预先定义预处理语句。&lt;/p&gt;
&lt;p&gt;更多信息，请参见&lt;a href=&#34;../UsingPreparedStatements&#34;&gt;Using prepared statements （使用预处理语句）&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用以下方法之一结束事务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Commit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tx.Commit&lt;/a&gt;提交事务。&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;Commit&lt;/code&gt;成功（返回&lt;code&gt;nil&lt;/code&gt;错误），那么所有的查询结果都被确认为有效，所有执行的更新都作为一个单一的原子变化应用到数据库中。如果&lt;code&gt;Commit&lt;/code&gt;失败，那么&lt;code&gt;Tx&lt;/code&gt;上的所有&lt;code&gt;Query&lt;/code&gt;和&lt;code&gt;Exec&lt;/code&gt;的结果都应该被视为无效而丢弃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;a href=&#34;https://pkg.go.dev/database/sql#Tx.Rollback&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tx.Rollback&lt;/a&gt;来回滚事务。&lt;/p&gt;
&lt;p&gt;即使&lt;code&gt;Tx.Rollback&lt;/code&gt;失败，该事务也不再有效，也不会被提交到数据库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;best-practices-最佳实践&#34;&gt;Best practices 最佳实践&lt;/h3&gt;
&lt;p&gt;​	遵循下面的最佳实践，可以更好地了解事务有时需要的复杂语义和连接管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用本节中描述的API来管理事务。&lt;strong&gt;不要直接使用与事务相关的SQL语句&lt;/strong&gt;，如&lt;code&gt;BEGIN&lt;/code&gt;和&lt;code&gt;COMMIT&lt;/code&gt;——这样做会使你的数据库处于不可预测的状态，尤其是在并发程序中。&lt;/li&gt;
&lt;li&gt;当使用事务时，注意&lt;strong&gt;不要直接调用非事务的&lt;/strong&gt;&lt;code&gt;sql.DB&lt;/code&gt;方法，因为这些方法会在事务之外执行，将会给你的代码提供一个不一致的数据库状态，甚至导致&lt;strong&gt;死锁&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-例子&#34;&gt;Example 例子&lt;/h3&gt;
&lt;p&gt;​	下面的例子中的代码使用一个事务来创建新专辑的客户订单。在这一过程中，代码将：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开始一个事务。&lt;/li&gt;
&lt;li&gt;延迟该事务的回滚。如果事务成功，它将在函数退出前被提交，使延迟的回滚调用成为no-op。如果事务失败，它将不会被提交，这意味着回滚将在函数退出时被调用。&lt;/li&gt;
&lt;li&gt;确认客户订购的专辑有足够的库存。&lt;/li&gt;
&lt;li&gt;如果有足够的存货，更新存货数量，用订购的专辑数量来减少它。&lt;/li&gt;
&lt;li&gt;创建一个新的订单，并为客户检索新订单的生成ID。&lt;/li&gt;
&lt;li&gt;提交事务并返回ID。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	这个例子使用了&lt;code&gt;Tx&lt;/code&gt;方法，这些方法需要一个&lt;code&gt;context.Context&lt;/code&gt;实参。这使得函数的执行——包括数据库操作——在其运行时间过长或客户端连接关闭的情况下有可能被取消。更多信息请参见&lt;a href=&#34;../CancelingIn-progressDatabaseOperations&#34;&gt;Canceling in-progress operations（取消正在进行的操作）&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;56
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// CreateOrder creates an order for an album and returns the new order ID. =&amp;gt; CreateOrder 为 album 创建一个订单，并返回新的订单 ID。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;CreateOrder&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Context&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;albumID&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;custID&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#e06c75&#34;&gt;orderID&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;int64&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Create a helper function for preparing failure results.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;fail&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) (&lt;span style=&#34;color:#e5c07b&#34;&gt;int64&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;CreateOrder: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Get a Tx for making transaction requests.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;BeginTx&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Defer a rollback in case anything fails.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Rollback&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Confirm that album inventory is enough for the order. =&amp;gt; 确认专辑有足够的库存。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryRowContext&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT (quantity &amp;gt;= ?) from album where id = ?&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;albumID&lt;/span&gt;).&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Scan&lt;/span&gt;(&lt;span style=&#34;color:#56b6c2&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt;); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;sql&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;ErrNoRows&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;no such album&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; !&lt;span style=&#34;color:#e06c75&#34;&gt;enough&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;not enough inventory&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Update the album inventory to remove the quantity in the order.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;ExecContext&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;UPDATE album SET quantity = quantity - ? WHERE id = ?&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;albumID&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Create a new row in the album_order table.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;result&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;ExecContext&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;INSERT INTO album_order (album_id, cust_id, quantity, date) VALUES (?, ?, ?, ?)&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;albumID&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;custID&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;quantity&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Now&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Get the ID of the order item just created.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;orderID&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;LastInsertId&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Commit the transaction.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e06c75&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Commit&lt;/span&gt;(); &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;fail&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Return the order ID.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;orderID&lt;/span&gt;, &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 取消正在进行的操作</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/CancelingIn-progressDatabaseOperations/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/CancelingIn-progressDatabaseOperations/</guid>
      <description>
        
        
        &lt;h1 id=&#34;canceling-in-progress-operations---取消正在进行的操作&#34;&gt;Canceling in-progress operations - 取消正在进行的操作&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/cancel-operations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/cancel-operations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	你可以通过使用Go &lt;a href=&#34;https://pkg.go.dev/context#Context&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;context.Context&lt;/a&gt;来管理正在进行的操作。&lt;code&gt;Context&lt;/code&gt;是一个标准的Go数据值，可以报告它所表示的整体操作是否已经被取消，是否不再需要。通过在应用程序中的函数调用和服务中传递&lt;code&gt;context.Context&lt;/code&gt;，这些（函数调用和服务）可以提前停止工作，并在不再需要其处理时返回一个错误。关于&lt;code&gt;Context&lt;/code&gt;的更多信息，请参阅 &lt;a href=&#34;../../../GoBlog/2014/GoConcurrencyPatternsContext&#34;&gt;Go并发模式：Context&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;例如，你可能想：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结束长期运行的操作，包括需要太长时间才能完成的数据库操作。&lt;/li&gt;
&lt;li&gt;传播来自其他地方的取消请求，例如当客户端关闭连接时。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	许多为Go开发者提供的API都包含接受&lt;code&gt;Context&lt;/code&gt;实参的方法，这使得在整个应用程序中更容易使用&lt;code&gt;Context&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;canceling-database-operations-after-a-timeout-在超时后取消数据库操作&#34;&gt;Canceling database operations after a timeout 在超时后取消数据库操作&lt;/h3&gt;
&lt;p&gt;​	你可以使用 &lt;code&gt;Context&lt;/code&gt; 来设置一个超时或最后期限，超时后的操作将被取消。要派生一个带有超时或最后期限的&lt;code&gt;Context&lt;/code&gt;，请调用&lt;a href=&#34;https://pkg.go.dev/context#WithTimeout&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;context.WithTimeout&lt;/a&gt;或&lt;a href=&#34;https://pkg.go.dev/context#WithDeadline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;context.WithDeadline&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;​	下面的超时例子中的代码派生了一个Context，并将其传递给&lt;code&gt;sql.DB&lt;/code&gt; &lt;a href=&#34;https://pkg.go.dev/database/sql#DB.QueryContext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;QueryContext&lt;/a&gt;方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryWithTimeout&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Context&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Create a Context with a timeout.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;queryCtx&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;cancel&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;WithTimeout&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#d19a66&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#e06c75&#34;&gt;Second&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;cancel&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Pass the timeout Context with a query.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;QueryContext&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;queryCtx&lt;/span&gt;, &lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM album&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e5c07b&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e06c75&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c678dd&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#7f848e&#34;&gt;// Handle returned rows.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	当一个上下文派生自一个外部上下文时，就像本例中&lt;code&gt;queryCtx&lt;/code&gt;派生自&lt;code&gt;ctx&lt;/code&gt;一样，如果外部上下文被取消，那么派生的上下文也会被自动取消。例如，在HTTP服务器中，&lt;code&gt;http.Request.Context&lt;/code&gt;方法返回一个与请求相关的上下文。如果HTTP客户端断开连接或取消HTTP请求（在HTTP/2中可能），则该上下文就会被取消。将HTTP请求的上下文传递给上面的&lt;code&gt;QueryWithTimeout&lt;/code&gt;会导致数据库查询提前停止，如果整个HTTP请求被取消或者查询时间超过5秒的话。&lt;/p&gt;
&lt;p&gt;!!! warning &amp;ldquo;注意&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;注意：当你创建一个有超时或截止日期的新`Context`时，（一定记得）始终推迟对`cancel`函数的调用。这将在外层函数退出时释放新`Context`所持有的资源。它也会取消`queryCtx`，但是当函数返回时，就不会再有任何东西使用 `queryCtx` 了。
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 管理连接</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ManagingConnections/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/ManagingConnections/</guid>
      <description>
        
        
        &lt;h1 id=&#34;managing-connections---管理连接&#34;&gt;Managing connections - 管理连接&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/manage-connections&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/manage-connections&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	对于绝大多数程序，你不需要调整&lt;code&gt;sql.DB&lt;/code&gt;连接池的默认值。但是对于一些高级程序，你可能需要优化连接池的参数或者显式地处理连接。本主题解释了如何做。&lt;/p&gt;
&lt;p&gt;​	&lt;a href=&#34;https://pkg.go.dev/database/sql#DB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.DB&lt;/a&gt;数据库句柄对于多个goroutine的并发使用是安全的（意味着该句柄是其他语言可能称之为 &amp;ldquo;&lt;code&gt;线程安全（thread-safe）&lt;/code&gt; &amp;ldquo;的）。其他一些数据库访问库是基于一次只能用于一个操作的连接。为了弥合这一差距，每个&lt;code&gt;sql.DB&lt;/code&gt;都管理着一个与底层数据库的活动连接池，根据你 Go 程序的并行性需要创建新连接池。&lt;/p&gt;
&lt;p&gt;​	连接池适用于大多数数据访问需求。当你调用一个&lt;code&gt;sql.DB&lt;/code&gt;的&lt;code&gt;Query&lt;/code&gt;或&lt;code&gt;Exec&lt;/code&gt;方法时，&lt;code&gt;sql.DB&lt;/code&gt;实现从池中检索一个可用的连接，或者在需要时创建一个连接。当不再需要连接时，包会将其返回到池中。这支持了数据库访问的高度并行性。&lt;/p&gt;
&lt;h3 id=&#34;setting-connection-pool-properties-设置连接池属性&#34;&gt;Setting connection pool properties 设置连接池属性&lt;/h3&gt;
&lt;p&gt;​	你可以设置属性来指导&lt;code&gt;sql&lt;/code&gt;包如何管理连接池。要获得关于这些属性的效果的统计信息，请使用&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Stats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.Stats&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;setting-the-maximum-number-of-open-connections-设置开放连接的最大数量&#34;&gt;Setting the maximum number of open connections 设置开放连接的最大数量&lt;/h4&gt;
&lt;p&gt;​	&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.SetMaxOpenConns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.SetMaxOpenConns&lt;/a&gt;对开放连接的数量进行了限制。超过这个限制，新的数据库操作将等待一个现有的操作完成，这时&lt;code&gt;sql.DB&lt;/code&gt;将创建另一个连接。默认情况下，当需要一个连接的时候，&lt;code&gt;sql.DB&lt;/code&gt;会在所有现有的连接都处于使用状态时创建一个新的连接。&lt;/p&gt;
&lt;p&gt;​	请记住，设置限制使得数据库的使用类似于获取一个锁或信号，其结果是你的应用程序可能会在等待新的数据库连接时发生死锁（deadlock ）。&lt;/p&gt;
&lt;h4 id=&#34;setting-the-maximum-number-of-idle-connections-设置空闲连接的最大数量&#34;&gt;Setting the maximum number of idle connections 设置空闲连接的最大数量&lt;/h4&gt;
&lt;p&gt;​	&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.SetMaxIdleConns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.SetMaxIdleConns&lt;/a&gt;更改&lt;code&gt;sql.DB&lt;/code&gt;维护的最大空闲连接数的限制。&lt;/p&gt;
&lt;p&gt;​	当一个SQL操作在一个给定的数据库连接上完成后，它通常不会立即关闭：应用程序可能很快就会再次需要一个连接，保持开放的连接可以避免在下一个操作中重新连接到数据库。默认情况下，&lt;code&gt;sql.DB&lt;/code&gt;在任何时候都保持两个空闲连接。提高这个限制可以避免在有大量并行性的程序中频繁的重新连接。&lt;/p&gt;
&lt;h4 id=&#34;setting-the-maximum-amount-a-time-a-connection-can-be-idle-设置一个连接可以空闲的最大时间量&#34;&gt;Setting the maximum amount a time a connection can be idle 设置一个连接可以空闲的最大时间量&lt;/h4&gt;
&lt;p&gt;​	&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.SetConnMaxIdleTime&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.SetConnMaxIdleTime&lt;/a&gt;设置了一个连接在被关闭之前可以空闲的最大时间。这将导致&lt;code&gt;sql.DB&lt;/code&gt;关闭那些空闲时间超过给定时间的连接。&lt;/p&gt;
&lt;p&gt;​	默认情况下，当将空闲连接添加到连接池时，它将一直保持在那里，直到再次需要它为止。当使用&lt;code&gt;DB.SetMaxIdleConns&lt;/code&gt;来增加并行活动爆发期间允许的空闲连接数时，也可以使用&lt;code&gt;DB.SetConnMaxIdleTime&lt;/code&gt;安排在系统安静时释放这些连接。&lt;/p&gt;
&lt;h4 id=&#34;setting-the-maximum-lifetime-of-connections-设置连接的最大生存期&#34;&gt;Setting the maximum lifetime of connections 设置连接的最大生存期&lt;/h4&gt;
&lt;p&gt;​	使用&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.SetConnMaxLifetime&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.SetConnMaxLifetime&lt;/a&gt;可以设置一个连接在被关闭之前可以保持开放的最大时间长度。&lt;/p&gt;
&lt;p&gt;​	默认情况下，一个连接可以在任意长的时间内被使用和重复使用，但要遵守上述的限制。在一些系统中，比如那些使用负载平衡的数据库服务器的系统，确保应用程序在不重新连接的情况下不会使用某个特定的连接太久是很有帮助的。&lt;/p&gt;
&lt;h3 id=&#34;using-dedicated-connections-使用专用连接&#34;&gt;Using dedicated connections 使用专用连接&lt;/h3&gt;
&lt;p&gt;​	&lt;code&gt;database/sql&lt;/code&gt;包包含一些函数，当数据库可能为在特定连接上执行的操作序列赋予隐式含义时，你可以使用这些函数。&lt;/p&gt;
&lt;p&gt;​	最常见的例子是事务，它通常以&lt;code&gt;BEGIN&lt;/code&gt;命令开始，以&lt;code&gt;COMMIT&lt;/code&gt;或&lt;code&gt;ROLLBACK&lt;/code&gt;命令结束，并在整个事务中包括这些命令之间的连接上发出的所有命令。对于这种使用情况，请使用&lt;code&gt;sql&lt;/code&gt;包的事务支持。参见 在较大的事务中运行一个查询。更多信息，请参阅&lt;a href=&#34;../ExecutingTransactions&#34;&gt;Executing transactions （执行事务）&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;​	对于其他必须在同一连接上执行一系列单独操作的使用情况，&lt;code&gt;sql&lt;/code&gt;包提供了专用连接。&lt;a href=&#34;https://pkg.go.dev/database/sql#DB.Conn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB.Conn&lt;/a&gt;获得一个专用连接，即&lt;a href=&#34;https://pkg.go.dev/database/sql#Conn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sql.Conn&lt;/a&gt;。&lt;code&gt;sql.Conn&lt;/code&gt;有&lt;code&gt;BeginTx&lt;/code&gt;、&lt;code&gt;ExecContext&lt;/code&gt;、&lt;code&gt;PingContext&lt;/code&gt;、&lt;code&gt;PrepareContext&lt;/code&gt;、&lt;code&gt;QueryContext&lt;/code&gt;和&lt;code&gt;QueryRowContext&lt;/code&gt;等方法，这些方法的行为与DB上的同类方法类似，但只使用专用连接。当完成专用连接后，你的代码必须使用&lt;code&gt;Conn.Close&lt;/code&gt;释放它。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 避免SQL注入风险</title>
      <link>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/AvoidingSQLInjectionRisk/</link>
      <pubDate>Wed, 17 May 2023 15:03:14 +0800</pubDate>
      
      <guid>http://ngd.cn/docs/UsingAndUnderstandingGo/AccessingDatabases/AvoidingSQLInjectionRisk/</guid>
      <description>
        
        
        &lt;h1 id=&#34;avoiding-sql-injection-risk---避免sql注入风险&#34;&gt;Avoiding SQL injection risk - 避免SQL注入风险&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://go.dev/doc/database/sql-injection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://go.dev/doc/database/sql-injection&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	你可以通过提供SQL参数值作为&lt;code&gt;sql&lt;/code&gt;包的函数实参来避免SQL注入风险。&lt;code&gt;sql&lt;/code&gt;包中的许多函数为SQL语句和用于该语句的参数值提供了参数（其他函数为预处理语句和参数提供一个参数）。&lt;/p&gt;
&lt;p&gt;​	下面的例子中的代码使用&lt;code&gt;?&lt;/code&gt; 符号作为&lt;code&gt;id&lt;/code&gt;参数的占位符，该参数是作为函数实参提供的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// Correct format for executing an SQL statement with parameters. =&amp;gt; 执行带参数的SQL语句的正确格式。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM user WHERE id = ?&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	执行数据库操作的&lt;code&gt;sql&lt;/code&gt;包函数从你提供的实参中创建预处理语句。在运行时，&lt;code&gt;sql&lt;/code&gt;包将SQL语句变成一个预处理语句，并将其与独立的参数一起发送。&lt;/p&gt;
&lt;p&gt;注意：参数占位符因你所使用的&lt;code&gt;DBMS&lt;/code&gt;和驱动而不同。例如，&lt;code&gt;Postgres&lt;/code&gt;的&lt;a href=&#34;https://pkg.go.dev/github.com/lib/pq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pq driver&lt;/a&gt;接受&lt;code&gt;$1&lt;/code&gt;这样的占位符形式，而不是 &lt;code&gt;?&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;​	你可能会想使用&lt;code&gt;fmt&lt;/code&gt;包中的一个函数来把SQL语句组合成一个包含参数的字符串——比如这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;// SECURITY RISK! =&amp;gt; 安全风险!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#7f848e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e06c75&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#e06c75&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#61afef;font-weight:bold&#34;&gt;Sprintf&lt;/span&gt;(&lt;span style=&#34;color:#98c379&#34;&gt;&amp;#34;SELECT * FROM user WHERE id = %s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	&lt;strong&gt;这是不安全的!&lt;/strong&gt; 当你这样做时，Go会组装整个SQL语句，用参数值替换&lt;code&gt;%s&lt;/code&gt;格式的动词，然后再将完整的语句发送给DBMS。&lt;strong&gt;这会带来&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL注入&lt;/a&gt;的风险&lt;/strong&gt;，因为代码的调用者可能会发送一个意外的SQL代码片段作为&lt;code&gt;id&lt;/code&gt;参数。该代码片段可能以不可预测的方式完成SQL语句，对你的应用程序造成危险。&lt;/p&gt;
&lt;p&gt;​	例如，通过传递某个&lt;code&gt;%s&lt;/code&gt;值，你可能会得到如下语句，这可能会返回你数据库中的所有用户记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c678dd&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#e06c75&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#c678dd&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#56b6c2&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d19a66&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
