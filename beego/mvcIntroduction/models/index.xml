<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>模型 on Go 中文档集</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/</link><description>Recent content in 模型 on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 04 Feb 2024 09:54:57 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/beego/mvcIntroduction/models/index.xml" rel="self" type="application/rss+xml"/><item><title>overview</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/overview/</link><pubDate>Sun, 04 Feb 2024 09:59:56 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/overview/</guid><description>原文：https://beego.wiki/docs/mvc/model/overview/ Overview 概述 Models － Beego ORM 模型 － Beego ORM Beego ORM is a powerful ORM framework written in Go. It is</description></item><item><title>ORM 用法</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/ormUsage/</link><pubDate>Sun, 04 Feb 2024 10:00:11 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/ormUsage/</guid><description>原文：https://beego.wiki/docs/mvc/model/orm/ ORM Usage - ORM 用法 ORM Usage ORM 用法 An example of beego/orm is set out below. ​ 下面列出了 beego/orm 的一个</description></item><item><title>CRUD 操作</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/crudOperations/</link><pubDate>Sun, 04 Feb 2024 10:00:25 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/crudOperations/</guid><description>原文：https://beego.wiki/docs/mvc/model/object/ CRUD Operations - CRUD 操作 CRUD of Object 对象的 CRUD If the value of the primary key is already known, Read, Insert, Update,</description></item><item><title>高级查询</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/advancedQueries/</link><pubDate>Sun, 04 Feb 2024 10:00:41 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/advancedQueries/</guid><description>原文：https://beego.wiki/docs/mvc/model/query/ Advanced Queries 高级查询 Advanced Queries 高级查询 ORM uses QuerySeter to organize queries. Every method that returns QuerySeter will give you a</description></item><item><title>使用原生 SQL 查询</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/rawSQLToQuery/</link><pubDate>Sun, 04 Feb 2024 10:00:58 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/rawSQLToQuery/</guid><description>原文：https://beego.wiki/docs/mvc/model/rawsql/ Raw SQL to query 使用 Raw SQL 查询 Raw SQL to query 查询原始 SQL Using Raw SQL to query do</description></item><item><title>查询构建器</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/queryBuilder/</link><pubDate>Sun, 04 Feb 2024 10:01:16 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/queryBuilder/</guid><description>原文：https://beego.wiki/docs/mvc/model/querybuilder/ Query Builder 查询构建器 Query Builder 查询生成器 QueryBuilder provides an API for convenient</description></item><item><title>事务</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/transaction/</link><pubDate>Sun, 04 Feb 2024 10:01:37 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/transaction/</guid><description>原文：https://beego.wiki/docs/mvc/model/transaction/ Transaction 事务 Transaction 事务 There are two ways to handle transaction in Beego. One is closure: ​ 在 Beego</description></item><item><title>命令行</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/commandLine/</link><pubDate>Sun, 04 Feb 2024 10:02:08 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/commandLine/</guid><description>原文：https://beego.wiki/docs/mvc/model/cmd/ Command Line 命令行 Command Line 命令行 You can call orm.RunCommand() after you registered models and database(s) as follows: ​ 在注册模型和</description></item><item><title>模型定义</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/modelDefinition/</link><pubDate>Sun, 04 Feb 2024 10:01:55 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/modelDefinition/</guid><description>原文：https://beego.wiki/docs/mvc/model/models/ Model Definition 模型定义 Model Definition 模型定义 Model names are used for database data conversion and Database Schema Generation ​ 模</description></item><item><title>测试用例</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/testCases/</link><pubDate>Sun, 04 Feb 2024 10:02:18 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/testCases/</guid><description>原文：https://beego.wiki/docs/mvc/model/test/ Test Cases 测试用例 ORM Test ORM 测试 Testing code: 测试代码： Model definition models_test.go 模型定义 models_test.go Test cases</description></item><item><title>自定义字段</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/customFileds/</link><pubDate>Sun, 04 Feb 2024 10:02:31 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/customFileds/</guid><description>原文：https://beego.wiki/docs/mvc/model/custom_fields/ Custom Fields 自定义字段 Custom Fields 自定义字段 1 2 3 4 5</description></item><item><title>FAQ</title><link>https://before80.github.io/go_docs/beego/mvcIntroduction/models/faq/</link><pubDate>Sun, 04 Feb 2024 10:02:38 +0800</pubDate><guid>https://before80.github.io/go_docs/beego/mvcIntroduction/models/faq/</guid><description>原文：https://beego.wiki/docs/mvc/model/faq/ FAQ FAQ Q: My application need to support multiple database type. How can I check current database type when I am using Raw SQL? ​ 问：我的</description></item></channel></rss>