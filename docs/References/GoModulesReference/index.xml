<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go Modules Reference on Go 中文档集</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/</link><description>Recent content in Go Modules Reference on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 17 May 2023 12:50:54 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/docs/References/GoModulesReference/index.xml" rel="self" type="application/rss+xml"/><item><title>简介</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/Introduction/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/Introduction/</guid><description>Introduction 简介 原文：https://go.dev/ref/mod#introduction ​ 模块是Go管理依赖项的方式。 ​ 本文档是关于 Go 的模块系统的</description></item><item><title>模块、包和版本</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModulesPackagesAndVersions/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModulesPackagesAndVersions/</guid><description>Modules, packages, and versions 模块、包和版本 原文：https://go.dev/ref/mod#modules-overview ​ 模块是发布、版本化和一起分发的包</description></item><item><title>go.mod 文件</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/gomodFiles/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/gomodFiles/</guid><description>go.mod files - go.mod 文件 原文：https://go.dev/ref/mod#go-mod-file ​ 模块由其根目录下的名为go.mod的UTF-8编码的</description></item><item><title>最小版本选择 (MVS)</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/MVS/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/MVS/</guid><description>Minimal version selection (MVS) 最小版本选择 (MVS) 原文：https://go.dev/ref/mod#minimal-version-selection ​ Go 使用一种叫做</description></item><item><title>模块图的修剪</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleGraphPruning/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleGraphPruning/</guid><description>Module graph pruning 模块图的修剪 原文：https://go.dev/ref/mod#graph-pruning ​ 如果主模块是go 1.17或更高版本，用于m</description></item><item><title>工作区</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/Workspaces/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/Workspaces/</guid><description>Workspaces 工作区 原文：https://go.dev/ref/mod#workspaces ​ 工作区是磁盘上模块的集合，在运行minimal version selection (MVS) （最小</description></item><item><title>与非模块存储库的兼容性</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/CompatibilityWithNon-moduleRepositories/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/CompatibilityWithNon-moduleRepositories/</guid><description>Compatibility with non-module repositories 与非模块存储库的兼容性 原文：https://go.dev/ref/mod#non-module-compat ​ 为了确保从GOPATH</description></item><item><title>具有模块感知的命令</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/Module-awareCommands/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/Module-awareCommands/</guid><description>Module-aware commands 具有模块感知的命令 原文：https://go.dev/ref/mod#mod-commands ​ 大多数 go 命令可以在模块感知模式或 GOPATH 模式下</description></item><item><title>模块代理</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleProxies/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleProxies/</guid><description>Module proxies 模块代理 原文：https://go.dev/ref/mod#module-proxy GOPROXY protocol ​ 模块代理是一个HTTP服务器，可以响应下面指定</description></item><item><title>版本控制系统</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/VersionControlSystems/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/VersionControlSystems/</guid><description>Version control systems 版本控制系统 原文：https://go.dev/ref/mod#vcs ​ go命令可以直接从版本控制储存库中下载模块的源代码和元数据。从</description></item><item><title>模块zip文件</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleZipFiles/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleZipFiles/</guid><description>Module zip files 模块zip文件 原文：https://go.dev/ref/mod#zip-files ​ 模块版本是以.zip文件的形式发布的。很少有必要</description></item><item><title>私有模块</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/PrivateModules/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/PrivateModules/</guid><description>Private modules 私有模块 原文：https://go.dev/ref/mod#private-modules ​ Go模块经常是在版本控制服务器和模块代理上开</description></item><item><title>模块缓存</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleCache/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/ModuleCache/</guid><description>Module cache 模块缓存 原文：https://go.dev/ref/mod#module-cache ​ 模块缓存是go命令存储下载模块文件的目录。模块缓存</description></item><item><title>验证模块</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/AuthenticatingModules/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/AuthenticatingModules/</guid><description>Authenticating modules 验证模块 原文：https://go.dev/ref/mod#authenticating ​ 当go命令下载模块zip 文件或go.mod文件</description></item><item><title>环境变量</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/EnvironmentVariables/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/EnvironmentVariables/</guid><description>Environment variables 环境变量 原文：https://go.dev/ref/mod#environment-variables ​ go命令中的模块行为可以使用下面</description></item><item><title>词汇表</title><link>https://before80.github.io/go_docs/docs/References/GoModulesReference/Glossary/</link><pubDate>Wed, 17 May 2023 09:59:21 +0800</pubDate><guid>https://before80.github.io/go_docs/docs/References/GoModulesReference/Glossary/</guid><description>Glossary词汇表 原文：https://go.dev/ref/mod#glossary build constraint A condition that determines whether a Go source file is used when compiling a package. Build constraints may be expressed with file name</description></item></channel></rss>