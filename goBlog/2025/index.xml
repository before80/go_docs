<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2025[7+篇] on Go 中文档集</title><link>https://before80.github.io/go_docs/goBlog/2025/</link><description>Recent content in 2025[7+篇] on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 31 Mar 2025 14:04:57 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/goBlog/2025/index.xml" rel="self" type="application/rss+xml"/><item><title>告别核心类型 - 迎接我们熟悉和喜爱的 Go！</title><link>https://before80.github.io/go_docs/goBlog/2025/GoodbyeCoreTypes-HelloGoAsWeKnowAndLoveIt/</link><pubDate>Mon, 31 Mar 2025 14:29:10 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/GoodbyeCoreTypes-HelloGoAsWeKnowAndLoveIt/</guid><description>原文：https://go.dev/blog/coretypes Goodbye core types - Hello Go as we know and love it! 告别核心类型 - 迎接我们熟悉和喜爱的 Go！ Robert Griesemer 26 March 2025 The</description></item><item><title>抗路径穿越的文件 API</title><link>https://before80.github.io/go_docs/goBlog/2025/TraversalResistantFileAPIs/</link><pubDate>Mon, 31 Mar 2025 14:27:27 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/TraversalResistantFileAPIs/</guid><description>原文：https://go.dev/blog/osroot Traversal-resistant file APIs - 抗路径穿越的文件 API Damien Neil 12 March 2025 A path traversal vulnerability arises when an attacker can trick a program into opening a file other than the one it intended. This</description></item><item><title>从 unique 到清理和弱引用：用于效率的新低级工具</title><link>https://before80.github.io/go_docs/goBlog/2025/FromUniqueToCleanupsAndWeakNewLowLevelToolsForEfficiency/</link><pubDate>Mon, 31 Mar 2025 14:26:24 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/FromUniqueToCleanupsAndWeakNewLowLevelToolsForEfficiency/</guid><description>原文：https://go.dev/blog/cleanups-and-weak From unique to cleanups and weak: new low-level tools for efficiency - 从 unique 到清理和弱引用：用于效率的新低级</description></item><item><title>使用 Swiss Tables 加速 Go 的映射</title><link>https://before80.github.io/go_docs/goBlog/2025/FasterGoMapsWithSwissTables/</link><pubDate>Mon, 31 Mar 2025 14:24:48 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/FasterGoMapsWithSwissTables/</guid><description>原文：https://go.dev/blog/swisstable Faster Go maps with Swiss Tables - 使用 Swiss Tables 加速 Go 的映射 Michael Pratt 26 February 2025 The hash table is a central data structure in computer science, and it provides the</description></item><item><title>使用testing/synctest测试并发代码</title><link>https://before80.github.io/go_docs/goBlog/2025/TestingConcurrentCodeWithTestingSynctest/</link><pubDate>Mon, 31 Mar 2025 14:23:28 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/TestingConcurrentCodeWithTestingSynctest/</guid><description>原文：https://go.dev/blog/synctest Testing concurrent code with testing/synctest - 使用testing/synctest测试并发代码 Damien Neil 19 February 2025 2025 年 2 月</description></item><item><title>使用Go的可扩展Wasm 应用程序</title><link>https://before80.github.io/go_docs/goBlog/2025/ExtensibleWasmApplicationsWithGo/</link><pubDate>Mon, 31 Mar 2025 14:20:54 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/ExtensibleWasmApplicationsWithGo/</guid><description>原文：https://go.dev/blog/wasmexport Extensible Wasm Applications with Go - 使用Go的可扩展Wasm 应用程序 Cherry Mui 13 February 2025 Go 1.24 enhances its WebAssembly (Wasm) capabilities with the addition</description></item><item><title>Go 1.24 已发布！</title><link>https://before80.github.io/go_docs/goBlog/2025/Go1_24IsReleased/</link><pubDate>Mon, 31 Mar 2025 14:05:28 +0800</pubDate><guid>https://before80.github.io/go_docs/goBlog/2025/Go1_24IsReleased/</guid><description>原文：https://go.dev/blog/go1.24 Go 1.24 is released! - Go 1.24 已发布！ Junyang Shao, on behalf of the Go team Junyang Shao，代表 Go 团队 11 February 2025 2025 年 2 月 11 日 Today the</description></item></channel></rss>