<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cookbook on Go 中文档集</title><link>https://before80.github.io/go_docs/echo/cookbook/</link><description>Recent content in cookbook on Go 中文档集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 09 Jul 2023 22:01:11 +0800</lastBuildDate><atom:link href="https://before80.github.io/go_docs/echo/cookbook/index.xml" rel="self" type="application/rss+xml"/><item><title>websocket</title><link>https://before80.github.io/go_docs/echo/cookbook/websocket/</link><pubDate>Sun, 09 Jul 2023 22:05:29 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/websocket/</guid><description>WebSocket 原文：https://echo.labstack.com/docs/cookbook/websocket Using net WebSocket Server cookbook/websocket/net/server.go 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>twitter-like-api</title><link>https://before80.github.io/go_docs/echo/cookbook/twitter-like-api/</link><pubDate>Sun, 09 Jul 2023 22:05:21 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/twitter-like-api/</guid><description>Twitter Like API 原文：https://echo.labstack.com/docs/cookbook/twitter This recipe demonstrates how to create a Twitter like REST API using MongoDB (Database), JWT (API security)</description></item><item><title>timeout</title><link>https://before80.github.io/go_docs/echo/cookbook/timeout/</link><pubDate>Sun, 09 Jul 2023 22:05:04 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/timeout/</guid><description>Timeout 原文：https://echo.labstack.com/docs/cookbook/timeout Server cookbook/timeout/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</description></item><item><title>subdomain</title><link>https://before80.github.io/go_docs/echo/cookbook/subdomain/</link><pubDate>Sun, 09 Jul 2023 22:04:57 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/subdomain/</guid><description>Subdomain 原文：https://echo.labstack.com/docs/cookbook/subdomain Server cookbook/subdomain/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description></item><item><title>streaming-response</title><link>https://before80.github.io/go_docs/echo/cookbook/streaming-response/</link><pubDate>Sun, 09 Jul 2023 22:04:44 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/streaming-response/</guid><description>Streaming Response Send data as it is produced Streaming JSON response with chunked transfer encoding Server cookbook/streaming-response/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;time&amp;#34;</description></item><item><title>reverse-proxy</title><link>https://before80.github.io/go_docs/echo/cookbook/reverse-proxy/</link><pubDate>Sun, 09 Jul 2023 22:04:22 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/reverse-proxy/</guid><description>Reverse Proxy 原文：https://echo.labstack.com/docs/cookbook/reverse-proxy This recipe demonstrates how you can use Echo as a reverse proxy</description></item><item><title>middleware</title><link>https://before80.github.io/go_docs/echo/cookbook/middleware/</link><pubDate>Sun, 09 Jul 2023 22:04:05 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/middleware/</guid><description>Middleware 原文：https://echo.labstack.com/docs/cookbook/middleware Write a custom middleware Middleware to collect request count, statuses and uptime. Middleware to write custom</description></item><item><title>负载均衡</title><link>https://before80.github.io/go_docs/echo/cookbook/load-balancing/</link><pubDate>Sun, 09 Jul 2023 22:03:52 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/load-balancing/</guid><description>Load Balancing - 负载均衡 原文：https://echo.labstack.com/docs/cookbook/load-balancing This recipe demonstrates how you can</description></item><item><title>jwt</title><link>https://before80.github.io/go_docs/echo/cookbook/jwt/</link><pubDate>Sun, 09 Jul 2023 22:03:38 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/jwt/</guid><description>JWT 原文：https://echo.labstack.com/docs/cookbook/jwt JWT middleware configuration can be found here. This is cookbook for: JWT authentication using HS256 algorithm. JWT is retrieved from Authorization request header.</description></item><item><title>jsonp</title><link>https://before80.github.io/go_docs/echo/cookbook/jsonp/</link><pubDate>Sun, 09 Jul 2023 22:03:33 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/jsonp/</guid><description>JSONP 原文：https://echo.labstack.com/docs/cookbook/jsonp JSONP is a method that allows cross-domain server calls. You can read more about it at the JSON versus JSONP Tutorial.</description></item><item><title>http2-server</title><link>https://before80.github.io/go_docs/echo/cookbook/http2-server/</link><pubDate>Sun, 09 Jul 2023 22:03:24 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/http2-server/</guid><description>HTTP/2 Server 原文：https://echo.labstack.com/docs/cookbook/http2 1) Generate a self-signed X.509 TLS certificate Run the following command to generate cert.pem and key.pem files: 1 go run</description></item><item><title>http2-server-push</title><link>https://before80.github.io/go_docs/echo/cookbook/http2-server-push/</link><pubDate>Sun, 09 Jul 2023 22:03:17 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/http2-server-push/</guid><description>HTTP/2 Server Push 原文：https://echo.labstack.com/docs/cookbook/http2-server-push NOTE Requires go1.8+ Send web assets using</description></item><item><title>hello-world</title><link>https://before80.github.io/go_docs/echo/cookbook/hello-world/</link><pubDate>Sun, 09 Jul 2023 22:03:02 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/hello-world/</guid><description>Hello World 原文：https://echo.labstack.com/docs/cookbook/hello-world Server cookbook/hello-world/server.go 1 2 3 4 5 6 7 8 9 10 11 12</description></item><item><title>graceful-shutdown</title><link>https://before80.github.io/go_docs/echo/cookbook/graceful-shutdown/</link><pubDate>Sun, 09 Jul 2023 22:02:53 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/graceful-shutdown/</guid><description>Graceful Shutdown Using http.Server#Shutdown() cookbook/graceful-shutdown/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 package main import ( &amp;#34;context&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; &amp;#34;os/signal&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.com/labstack/echo/v4&amp;#34; &amp;#34;github.com/labstack/gommon/log&amp;#34; ) func main() { // Setup e := echo.New() e.Logger.SetLevel(log.INFO) e.GET(&amp;#34;/&amp;#34;, func(c echo.Context) error</description></item><item><title>google-app-engine</title><link>https://before80.github.io/go_docs/echo/cookbook/google-app-engine/</link><pubDate>Sun, 09 Jul 2023 22:02:36 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/google-app-engine/</guid><description>Google App Engine 原文：https://echo.labstack.com/docs/cookbook/google-app-engine Google App Engine (GAE) provides a range</description></item><item><title>file-upload</title><link>https://before80.github.io/go_docs/echo/cookbook/file-upload/</link><pubDate>Sun, 09 Jul 2023 22:02:18 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/file-upload/</guid><description>File Upload 原文：https://echo.labstack.com/docs/cookbook/file-upload Upload single file with parameters Server cookbook/file-upload/single/server.go 1 2 3 4 5 6 7</description></item><item><title>file-download</title><link>https://before80.github.io/go_docs/echo/cookbook/file-download/</link><pubDate>Sun, 09 Jul 2023 22:02:07 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/file-download/</guid><description>File Download 原文：https://echo.labstack.com/docs/cookbook/file-download Download file Server cookbook/file-download/server.go 1 2 3 4 5 6 7 8</description></item><item><title>embed-resources</title><link>https://before80.github.io/go_docs/echo/cookbook/embed-resources/</link><pubDate>Sun, 09 Jul 2023 22:01:58 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/embed-resources/</guid><description>Embed Resources 原文：https://echo.labstack.com/docs/cookbook/embed-resources With go 1.16 embed feature cookbook/embed/server.go 1 2 3 4</description></item><item><title>crud</title><link>https://before80.github.io/go_docs/echo/cookbook/crud/</link><pubDate>Sun, 09 Jul 2023 22:01:42 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/crud/</guid><description>CRUD 原文：https://echo.labstack.com/docs/cookbook/crud Server cookbook/crud/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>cors</title><link>https://before80.github.io/go_docs/echo/cookbook/cors/</link><pubDate>Sun, 09 Jul 2023 22:01:33 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/cors/</guid><description>CORS Server using a list of allowed origins cookbook/cors/origin-list/server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 package main import ( &amp;#34;net/http&amp;#34; &amp;#34;github.com/labstack/echo/v4&amp;#34; &amp;#34;github.com/labstack/echo/v4/middleware&amp;#34; ) var ( users = []string{&amp;#34;Joe&amp;#34;, &amp;#34;Veer&amp;#34;, &amp;#34;Zion&amp;#34;} ) func getUsers(c echo.Context) error { return c.JSON(http.StatusOK,</description></item><item><title>auto-tls</title><link>https://before80.github.io/go_docs/echo/cookbook/auto-tls/</link><pubDate>Sun, 09 Jul 2023 22:01:26 +0800</pubDate><guid>https://before80.github.io/go_docs/echo/cookbook/auto-tls/</guid><description>Auto TLS 原文：https://echo.labstack.com/docs/cookbook/auto-tls This recipe demonstrates how to obtain TLS certificates for a domain automatically from Let&amp;rsquo;s Encrypt. Echo#StartAutoTLS accepts</description></item></channel></rss>